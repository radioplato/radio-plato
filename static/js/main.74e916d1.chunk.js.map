{"version":3,"sources":["components/menu/Menu.tsx","components/menu/menu-button/MenuButton.tsx","components/shared/interfaces.ts","components/shared/SocialLinksComponent/SocialLinksComponent.tsx","components/shared/Player/PlayerService.ts","components/shared/Player/constants.ts","components/shared/enums.ts","components/shared/Player/PlayerControls/PlayButton/PlayButton.tsx","components/shared/Player/PlayerControls/VolumeControls/VolumeControls.tsx","components/shared/Player/PlayerComponent/PlayerComponent.tsx","components/shared/constants.ts","components/header/Header.tsx","components/shared/wrappers/seo/Seo.tsx","components/shared/schedule/enums.ts","components/gallery/GalleryService.ts","components/shared/schedule/ScheduleService.ts","components/gallery/GalleryComponent.tsx","components/news/NewsCardComponent/NewsCardComponent.tsx","components/news/constants.ts","components/advertisement/AdService.ts","components/news/NewsListComponent.tsx","components/shared/schedule/ScheduleShowline.tsx","components/shared/schedule/ScheduleComponent.tsx","components/shared/wrappers/scrollable/Scrollable.tsx","components/start-page/StartPageComponent.tsx","components/shows/ShowCardComponent/ShowCardComponent.tsx","components/shows/ShowListComponent.tsx","components/shows/ShowEpisodesComponent/ShowEpisodesComponent.tsx","components/shows/ShowComponent/ShowComponent.tsx","components/advertisement/AdComponent/AdComponent.tsx","components/studio/enums.ts","components/news/News/NewsComponent.tsx","components/about/About.tsx","components/donate/Donate.tsx","components/studio/constants.ts","components/studio/project-card/ProjectCardComponent.tsx","components/studio/Studio.tsx","components/not-found/NotFoundComponent.tsx","components/content/Content.tsx","components/main/Main.tsx","components/shared/Player/Player.tsx","App.tsx","index.tsx"],"names":["PAGES","Menu","menuRef","wrapperRef","toggleMenu","className","isMobileOnly","ref","onClick","map","title","route","toLowerCase","key","to","buildMenuItem","MenuButton","Socials","Locale","LocaleString","useState","isOpened","changeMenuStatus","React","createRef","bodyOverflow","current","classList","toggle","document","body","style","overflow","icon","menuIcon","color","width","height","SOCIAL_ICONS","Map","Mixcloud","mixcloudIcon","Spotify","spotifyIcon","Itunes","itunesIcon","Castbox","castboxIcon","Facebook","facebookIcon","Vk","vkIcon","Email","mailRu","Instagram","instagramIcon","Telegram","telegramIcon","Soundcloud","soundcloudIcon","GooglePodcasts","googlepodcastsIcon","Patreon","patreonIcon","Bandcamp","bandcampIcon","Youtube","youtubeIcon","SocialLinksComponent","StorageKey","socialLinks","linkElements","Object","entries","entry","service","href","Date","getTime","get","target","aria-label","rel","buildSocialLink","DEFAULT_PLAYER_STATE","playing","fading","muted","volume","PlayerTypes","NewsListTypes","playerService","state","value","playerState","track","playerStateSubject","trackNameSubject","connection","WebSocket","process","fadingTimer","this","Subject","setInterval","localStorage","getItem","Volume","parseFloat","onmessage","event","onMessage","data","JSON","parse","updateTrackName","now_playing","song","text","isPlaying","next","volumeLevel","setItem","toString","isMuted","isFading","onNext","subscribe","a","name","volumeDecrease","clearInterval","volumeIncrease","PlayButton","playerType","setPlayingMode","renderIcon","size","Main","pauseIcon","playIcon","FullVolumeIcon","bxsVolumeFull","MuteVolumeIcon","bxsVolumeMute","device","VolumeControls","setVolumeMode","Math","trunc","setVolume","useEffect","sliderDefaultValue","subscription","subscribeOnPlayerStateChanges","unsubscribe","ReactSlider","thumbClassName","trackClassName","defaultValue","onChange","changeVolume","ariaLabel","PlayerComponent","trackName","props","subscribeOnPlayerStateChange","setState","tracktitle","querySelector","remove","add","setTimeout","subscribeOnTrackNameChanges","onTrackChange","dummy","createElement","appendChild","select","execCommand","removeChild","copyToClipboard","handleTrackTitleClick","isMainPlayer","renderMainPlayer","renderHeaderPlayer","renderPlayer","PureComponent","BASIC_SEO_IMG","HEADER_SOCIAL_LINKS","mixcloud","bandcamp","facebook","vk","email","instagram","telegram","googlePlay","Header","exact","path","render","Component","Seo","meta","description","slice","property","content","thumbnail","type","IndexesOfDay","galleryService","indexGallery","gallerySubject","fetchIndexGallery","bind","gallery","fetch","then","response","json","parseIndexGallery","updateIndexGallery","dto","photoExhibition","PhotoExhibition","photoExhibitionAuthor","PhotoExhibitionAuthor","photoExhibitionDescription","PhotoExhibitionDescription","photoExhibitionLink","PhotoExhibitionLink","photoExhibitionMedia","PhotoExhibitionMedia","imageDto","mapImageDto","photoExhibitionTitle","PhotoExhibitionTitle","regularGallery","RegularGallery","sort","random","video","Video","videoEmbedCode","VideoEmbedCode","alternativeText","caption","url","PeriodicityTypes","indexByDayName","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","scheduleService","_schedule","_currentShow","scheduleSubject","currentShowSubject","fetchSchedules","updateCurrentShow","schedule","show","weekday","moment","isoWeekday","currentDate","toISOString","substr","currentShow","find","showline","isBetween","startTime","start","endTime","end","concat","datum","parseScheduleLine","scheduleShows","organizeSchedule","OnAirDateTime","onAirDateTime","weekdays","dayIndex","undefined","push","Title","Description","Type","hide","Hide","link","Link","startDate","StartDate","StartTime","endDate","EndDate","EndTime","periodicity","Periodicity","image","ShowImg","day","forEach","shouldShowBeOnAir","sortShowsByDate","first","second","showStartDate","dateOfDay","subtract","weeksPassed","week","Weekly","includes","BiWeekly","EveryThirdWeek","SingleTime","startOf","isSame","GalleryComponent","subscribeOnGalleryChange","subscribeOnGalleryChanges","controls","showArrows","showStatus","showThumbs","showIndicators","autoPlay","infiniteLoop","interval","photo","src","alt","graphicContentSelection","LinkElement","newsCard","children","slug","category","TagElement","tag","NewsCardComponent","AdPlacements","excerpt","newsCover","loading","adService","_advertisements","advertisementsSubject","newsCardAdSubject","newsPostAdSubject","fetchAdvertisements","ads","advertisements","getSpecificAdvertisementByType","NewsList","NewsPost","parseAdvertisements","updateAdvertisements","ad","placement","isBefore","isActive","AdActive","AdEnd","AdImage","AdLink","AdPlacement","AdStart","AdText","AdTitle","NewsListComponent","advertisement","newsCards","page","fetchNews","filter","toUpperCase","parseNewsCard","handleResponse","handleScroll","container","scrollTop","window","innerHeight","scrollHeight","newsDto","Excerpt","Category","PostCover","Slug","publishDate","publish_at","diff","length","cards","sortCardsByDate","adNewsCard","advertisementToNewsCard","onScroll","Full","renderFullNewsList","renderSimpleNewsList","subscribeOnAdvertisementChange","subscribeOnNewsCardAdUpdate","renderNewsCards","ScheduleShowline","selectedDay","isNow","format","showlineWrapper","DAYS_OF_WEEK","ScheduleComponent","scheduleSubscription","currentShowSubscription","scheduleShowlineBuilder","selectDay","handleDropdownChoise","currentTarget","renderDropdown","index","renderButtons","renderDailySchedule","playlistShow","subscribeOnScheduleChanges","subscribeOnCurrentShowChanges","SchedulePageComponent","withSeo","StartPageComponent","Simple","ShowCardComponent","showCard","showCover","ShowListComponent","showCards","showDto","ShowCover","weight","Weight","parseShowCard","shows","b","fetchShows","renderShowCards","ShowEpisodesComponent","showEpisodes","pictures","date","created_time","playlistDto","parseShowEpisode","mixcloudPlaylist","playlist","parseShowEpisodes","reverse","episode","split","join","episodes","renderShowEpisode","fetchPlaylist","renderShowEpisodes","ShowComponent","showLinks","ShowLink","spotify","itunes","castbox","googlepodcasts","soundcloud","patreon","youtube","MixcloudPlaylist","parseShow","fetchShow","previousProps","componentDidMount","imageSrc","navigator","userAgent","AdComponent","ProjectTag","FilterItem","localeStringByLocale","English","Belorussian","Russian","NewsComponent","news","articles","locales","currentLocale","isCurrent","locale","Array","from","Set","localizations","localization","Content","wordsBy","WordsBy","photosBy","PhotosBy","localeString","localePostfix","parseNews","fetchCurrentArticle","fetchLastArticles","subscribeOnNewsPostAdUpdate","imageStyle","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundImage","changeLocale","source","escapeHtml","renderers","article","AboutComponent","about","aboutDto","aboutCover","Image","parseAbout","fetchAbout","DonateComponent","donate","donateDto","donateCover","parseDonate","fetchDonate","projectTagToFilterItem","Animation","Commercials","Foley","Jingles","Mobile","PodcastsVoice","filterItemToProjectTag","All","PLAYER_CONFIG","file","attributes","disablePictureInPicture","controlsList","ProjectCardComponent","project","shouldPlay","onTagClick","onCardClick","playerRef","id","seekTo","handleCardClick","config","loop","renderMedia","tags","handleTagClick","StudioComponent","studio","projects","displayedProjects","activeProject","filterItems","currentFilter","studioDto","Decription","studioImage","portfolioDto","parseTags","Tag","parseStudio","parseProjects","flat","localeCompare","fetchStudio","fetchPortfolio","setFilter","item","renderFilterButtons","renderProjectCards","QUESTIONS","NotFoundComponent","question","floor","ROUTES","component","SCHEDULE","SHOWS","routerProps","match","params","NEWS","ABOUT","DONATE","STUDIO","Player","forceAudio","Components","App","basename","rootElement","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.74e916d1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport './Menu.css'\r\n\r\n\r\nconst PAGES = [\r\n    'News',\r\n    'Shows',\r\n    'Schedule',\r\n    'Studio',\r\n    'About'\r\n];\r\n\r\ninterface MenuParameters {\r\n    menuRef: React.RefObject<HTMLDivElement>;\r\n    wrapperRef: React.RefObject<HTMLDivElement>;\r\n    toggleMenu: () => void;\r\n}\r\n\r\nfunction Menu({ menuRef, wrapperRef, toggleMenu }: MenuParameters) {\r\n    const buildMenuItem = (title: string) => {\r\n        const route = `/${ title.toLowerCase() }`;\r\n\r\n        return (\r\n            <li className='menu-item' key={ title }>\r\n                <Link to={ route } onClick={ toggleMenu }>{ title }</Link>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`wrapper ${ isMobileOnly ? 'mobile' : 'desktop' }`} ref={ wrapperRef } onClick={ toggleMenu } />\r\n            <nav ref={ menuRef } className={ isMobileOnly ? 'mobile' : 'desktop' }>\r\n                <div className='menu-button-aside white' onClick={ toggleMenu }>\r\n                    <p className='label close-button'>CLOSE</p>\r\n                </div>\r\n                <div className='menu-items-container'>\r\n                    <ul className='menu-items'>\r\n                        { PAGES.map(title => buildMenuItem(title)) }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>     \r\n    );\r\n  }\r\n  \r\n  export default Menu","import React, { useState } from 'react'\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport menuIcon from '@iconify/icons-gridicons/menu';\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './MenuButton.css'\r\n\r\n\r\nconst MENU = 'menu';\r\n\r\nfunction MenuButton() {\r\n    const [ isOpened, changeMenuStatus ] = useState(true);\r\n\r\n    const menuRef = React.createRef<HTMLDivElement>()\r\n    const wrapperRef = React.createRef<HTMLDivElement>()\r\n    \r\n    const toggleMenu = () => {\r\n        const bodyOverflow = isOpened ? 'hidden' : 'unset';\r\n        \r\n        wrapperRef.current?.classList.toggle('wrapper-show');\r\n        menuRef.current?.classList.toggle('menu-open');\r\n        document.body.style.overflow = bodyOverflow;\r\n        changeMenuStatus(!isOpened);\r\n    }\r\n\r\n    const renderAsideButton = () => {\r\n        return (\r\n            <div className='menu-button-aside black' onClick={ toggleMenu }>\r\n                <p className='label open-button'>{ MENU }</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderHeaderButton = () => {\r\n        return (\r\n            <div className='menu-button-header' onClick={ toggleMenu }>\r\n                <Icon icon={ menuIcon } color='white' width={ 40 } height={ 40 }/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu menuRef={ menuRef } wrapperRef={ wrapperRef } toggleMenu={ toggleMenu }/>\r\n            { isMobileOnly ? renderHeaderButton() : renderAsideButton() }\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default MenuButton","export enum Socials {\r\n    Castbox = \"castbox\",\r\n    Itunes = \"itunes\",\r\n    Mixcloud = \"mixcloud\",\r\n    Spotify = \"spotify\",\r\n    Facebook = \"facebook\",\r\n    Vk = \"vk\",\r\n    Email = \"email\",\r\n    Instagram = \"instagram\",\r\n    Telegram = \"telegram\",\r\n    GooglePlay = \"googlePlay\",\r\n    GooglePodcasts = \"googlepodcasts\",\r\n    Patreon = \"patreon\",\r\n    Soundcloud = \"soundcloud\",\r\n    Bandcamp = \"bandcamp\",\r\n    Youtube = \"youtube\",\r\n}\r\n\r\nexport enum Locale {\r\n    English = \"en\",\r\n    Belorussian = \"be-BY\",\r\n    Russian = \"ru-RU\",\r\n}\r\n\r\nexport enum LocaleString {\r\n    English = \"EN\",\r\n    Belorussian = \"BY\",\r\n    Russian = \"RU\",\r\n}\r\n\r\nexport type SocialLinks = {\r\n    [key in Socials]?: string;\r\n};\r\n\r\nexport interface StrapiObjectDto {\r\n    createdAt: string;\r\n    id: string;\r\n    updatedAt: string;\r\n    __v: number;\r\n    _id: number;\r\n}\r\n\r\nexport interface StrapiLocalization {\r\n    _id: string;\r\n    id: string;\r\n    locale: Locale;\r\n    published_at: string;\r\n}\r\n\r\nexport interface ImageDto {\r\n    ext: string;\r\n    hash: string;\r\n    height: number;\r\n    mime: string;\r\n    size: number;\r\n    url: string;\r\n    width: number;\r\n}\r\n\r\nexport interface FormatsDto {\r\n    thumbnail?: ImageDto;\r\n}\r\n\r\nexport interface CoverDto extends StrapiObjectDto, ImageDto {\r\n    alternativeText: string;\r\n    caption: string;\r\n    formats: FormatsDto;\r\n    name: string;\r\n    provider: string;\r\n    related: string[];\r\n}\r\n\r\nexport interface SimpleImage {\r\n    alternativeText?: string;\r\n    caption?: string;\r\n    url?: string;\r\n}\r\n","import React from 'react'\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport mixcloudIcon from '@iconify/icons-cib/mixcloud';\r\nimport spotifyIcon from '@iconify/icons-cib/spotify';\r\nimport itunesIcon from '@iconify/icons-ps/itunes';\r\nimport castboxIcon from '@iconify/icons-simple-icons/castbox';\r\nimport facebookIcon from '@iconify/icons-cib/facebook';\r\nimport vkIcon from '@iconify/icons-cib/vk';\r\nimport mailRu from '@iconify/icons-cib/mail-ru';\r\nimport instagramIcon from '@iconify/icons-cib/instagram';\r\nimport telegramIcon from '@iconify/icons-cib/telegram';\r\nimport soundcloudIcon from '@iconify/icons-cib/soundcloud';\r\nimport googlepodcastsIcon from '@iconify/icons-cib/google-podcasts';\r\nimport patreonIcon from '@iconify/icons-cib/patreon';\r\nimport bandcampIcon from '@iconify/icons-cib/bandcamp';\r\nimport youtubeIcon from '@iconify/icons-cib/youtube';\r\n\r\nimport { SocialLinks, Socials } from '../interfaces';\r\n\r\nimport './SocialLinksComponent.css'\r\n\r\nconst SOCIAL_ICONS = new Map<string, object>([\r\n    [ Socials.Mixcloud, mixcloudIcon ],\r\n    [ Socials.Spotify, spotifyIcon ],\r\n    [ Socials.Itunes, itunesIcon ],\r\n    [ Socials.Castbox, castboxIcon ],\r\n    [ Socials.Facebook, facebookIcon ],\r\n    [ Socials.Vk, vkIcon ],\r\n    [ Socials.Email, mailRu ],\r\n    [ Socials.Instagram, instagramIcon ],\r\n    [ Socials.Telegram, telegramIcon ],\r\n    [ Socials.Soundcloud, soundcloudIcon ],\r\n    [ Socials.GooglePodcasts, googlepodcastsIcon ],\r\n    [ Socials.Patreon, patreonIcon ],\r\n    [ Socials.Bandcamp, bandcampIcon ],\r\n    [ Socials.Youtube, youtubeIcon ],\r\n]);\r\n\r\ninterface SocialLinksProperties {\r\n    socialLinks: SocialLinks;\r\n}\r\n\r\nfunction buildSocialLink (service: string, href: string | undefined) {\r\n    const key = `${ service }-${ new Date().getTime() }`;\r\n    const icon = SOCIAL_ICONS.get(service);\r\n\r\n    return href && icon ? (\r\n        <a  className='social-link'\r\n            target='_blank'\r\n            key={ key }\r\n            href={ href }\r\n            title={ `A link to ${ service }` }\r\n            aria-label={ `A link to ${ service }` }\r\n            rel='noopener noreferrer'\r\n        >\r\n            <Icon className='social-icon' icon={ icon } width='1.5em' color='white'/>\r\n        </a>\r\n    ) : (null);\r\n}\r\n\r\nfunction SocialLinksComponent({ socialLinks }: SocialLinksProperties) {\r\n    const linkElements = Object.entries(socialLinks).map(entry => buildSocialLink(entry[0], entry[1]));\r\n\r\n    return (\r\n        <div className='social-icons'>\r\n            { linkElements }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialLinksComponent;","import { Subject } from \"rxjs\";\r\n\r\nimport { PlayerState } from \"./interfaces\";\r\nimport { DEFAULT_PLAYER_STATE } from \"./constants\";\r\n\r\nenum StorageKey {\r\n    Volume = \"volume\",\r\n}\r\n\r\nconst parseVolume = (value: string | null): number => (value !== null ? parseFloat(value) : 1);\r\n\r\nconst tickPeriod = 3;\r\nconst rampTicks = 100;\r\n\r\nclass PlayerService {\r\n    private playerState: PlayerState;\r\n    private track = \"\";\r\n    private playerStateSubject: Subject<PlayerState>;\r\n    private trackNameSubject: Subject<string>;\r\n    private connection = new WebSocket(process.env.REACT_APP_DATA_URL as string);\r\n\r\n    private fadingTimer: ReturnType<typeof setInterval>;\r\n\r\n    private onMessage(event: MessageEvent) {\r\n        const data = JSON.parse(event.data);\r\n\r\n        this.updateTrackName(data.now_playing.song.text);\r\n    }\r\n\r\n    constructor(state: PlayerState) {\r\n        this.playerState = state;\r\n\r\n        this.playerStateSubject = new Subject();\r\n        this.trackNameSubject = new Subject();\r\n\r\n        this.fadingTimer = setInterval(() => {}, 0);\r\n\r\n        this.volume = parseVolume(localStorage.getItem(StorageKey.Volume));\r\n\r\n        this.connection.onmessage = (event) => this.onMessage(event);\r\n    }\r\n\r\n    set playing(isPlaying: boolean) {\r\n        this.playerState.playing = isPlaying;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get playing() {\r\n        return this.playerState.playing;\r\n    }\r\n\r\n    set volume(volumeLevel: number) {\r\n        localStorage.setItem(StorageKey.Volume, volumeLevel.toString());\r\n\r\n        this.playerState.volume = volumeLevel;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get volume() {\r\n        return this.playerState.volume;\r\n    }\r\n\r\n    set muted(isMuted: boolean) {\r\n        this.playerState.muted = isMuted;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get muted() {\r\n        return this.playerState.muted;\r\n    }\r\n\r\n    set fading(isFading: boolean) {\r\n        this.playerState.fading = isFading;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get fading(): boolean {\r\n        return this.playerState.fading;\r\n    }\r\n\r\n    get trackName() {\r\n        return this.track;\r\n    }\r\n\r\n    subscribeOnPlayerStateChanges(onNext: Function) {\r\n        return this.playerStateSubject.subscribe((data) => onNext(data));\r\n    }\r\n\r\n    subscribeOnTrackNameChanges(onNext: Function) {\r\n        return this.trackNameSubject.subscribe((data) => onNext(data));\r\n    }\r\n\r\n    async updateTrackName(name: string = \"\") {\r\n        if (name !== this.track) {\r\n            this.track = name;\r\n            this.trackNameSubject.next(this.track);\r\n        }\r\n    }\r\n\r\n    fadeOut() {\r\n        if (!this.playing || !this.muted) {\r\n            return;\r\n        }\r\n\r\n        const currentVolume = this.volume;\r\n        const volumeDecrease = currentVolume / rampTicks;\r\n\r\n        clearInterval(this.fadingTimer);\r\n\r\n        this.fading = true;\r\n\r\n        this.fadingTimer = setInterval(() => {\r\n            if (this.volume - volumeDecrease > 0) {\r\n                this.volume = this.volume - volumeDecrease;\r\n            } else {\r\n                this.volume = 0;\r\n                this.fading = false;\r\n\r\n                clearInterval(this.fadingTimer);\r\n            }\r\n        }, tickPeriod);\r\n    }\r\n\r\n    fadeIn() {\r\n        if (!this.playing || !this.muted) {\r\n            return;\r\n        }\r\n\r\n        const currentVolume = this.volume;\r\n        const volumeIncrease = currentVolume / rampTicks;\r\n\r\n        clearInterval(this.fadingTimer);\r\n\r\n        this.fading = true;\r\n\r\n        this.fadingTimer = setInterval(() => {\r\n            if (this.volume + volumeIncrease < 1) {\r\n                this.volume = this.volume + volumeIncrease;\r\n            } else {\r\n                this.volume = 1;\r\n                this.fading = false;\r\n\r\n                clearInterval(this.fadingTimer);\r\n            }\r\n        }, tickPeriod);\r\n    }\r\n}\r\n\r\nconst playerService = new PlayerService(DEFAULT_PLAYER_STATE);\r\n\r\nexport { playerService };\r\n","import { PlayerState } from \"./interfaces\";\r\n\r\nexport const DEFAULT_PLAYER_STATE: PlayerState = {\r\n    playing: false,\r\n    fading: false,\r\n    muted: false,\r\n    volume: 1,\r\n};\r\n","export enum PlayerTypes {\r\n    Main = 'main',\r\n    Header = 'header'\r\n};\r\n\r\nexport enum NewsListTypes {\r\n    Full = 'full',\r\n    Simple = 'simple'\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport playIcon from '@iconify/icons-el/play';\r\nimport pauseIcon from '@iconify/icons-el/pause';\r\n\r\nimport { playerService } from '../../PlayerService';\r\nimport { PlayerProps } from '../../interfaces';\r\nimport { PlayerTypes } from '../../../enums';\r\n\r\nimport './PlayButton.css';\r\n\r\n\r\nconst SMALL_ICON = 10;\r\nconst LARGE_ICON = 35;\r\n\r\nfunction PlayButton({ playerType }: PlayerProps) {\r\n    const [ playing, setPlayingMode ] = useState(playerService.playing);\r\n\r\n    const togglePlayingMode = () => {\r\n        playerService.playing = !playerService.playing;\r\n        setPlayingMode(playerService.playing);\r\n    }\r\n\r\n    const isMainPlayer = () => {\r\n        return playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    const renderIcon = (icon: object) => {\r\n        const size = isMainPlayer() ? LARGE_ICON : SMALL_ICON;\r\n\r\n        return <Icon icon={ icon } width={ size } height={ size }/>;\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className={ `play-button ${ playing ? 'playing' : 'paused' }` }\r\n            aria-label='Play radio button'\r\n            onClick={ togglePlayingMode }\r\n        >\r\n            { playing ? renderIcon(pauseIcon) : renderIcon(playIcon) }\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PlayButton;","import React, { useEffect, useState } from 'react';\r\n\r\nimport ReactSlider from 'react-slider';\r\nimport { Icon } from '@iconify/react';\r\nimport bxsVolumeFull from '@iconify/icons-bx/bxs-volume-full';\r\nimport bxsVolumeMute from '@iconify/icons-bx/bxs-volume-mute';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { playerService } from '../../PlayerService';\r\n\r\nimport './VolumeControls.css';\r\nimport { PlayerState } from '../../interfaces';\r\n\r\nconst FullVolumeIcon = <Icon icon={ bxsVolumeFull } width={ 16 } height={ 16 } color='#ffffff'/>;\r\nconst MuteVolumeIcon = <Icon icon={ bxsVolumeMute } width={ 16 } height={ 16 } color='#ffffff'/>;\r\nconst device = isMobileOnly ? 'mobile' : 'desktop';\r\n\r\nfunction VolumeControls() {\r\n    const [ muted, setVolumeMode ] = useState(playerService.muted);\r\n    const [ volume, setVolume ] = useState(Math.trunc(playerService.volume * 100));\r\n\r\n    useEffect(() => {\r\n        setVolume(sliderDefaultValue());\r\n\r\n        const subscription = playerService.subscribeOnPlayerStateChanges((data: PlayerState) => {\r\n            setVolume(Math.trunc(data.volume * 100));\r\n            setVolumeMode(data.muted);\r\n        });\r\n\r\n        return () => subscription?.unsubscribe();\r\n    }, []);\r\n    \r\n    const toggleVolumeMode = () => {\r\n        playerService.muted = !playerService.muted;\r\n        setVolumeMode(playerService.muted);\r\n    }\r\n\r\n    const changeVolume = (value: any) => {\r\n        playerService.volume = value / 100;\r\n        playerService.muted = false;\r\n        setVolumeMode(playerService.muted);\r\n    }\r\n\r\n    const sliderDefaultValue = () => {\r\n        const value = playerService.volume * 100;\r\n        \r\n        return Math.trunc(value);\r\n    }\r\n\r\n    return (\r\n        <div className='volume-controls'>\r\n            <button \r\n                className={ `volume-mode-button ${ device }` }\r\n                aria-label='Toggle volume button'\r\n                onClick={ toggleVolumeMode }\r\n            >\r\n                { muted ? MuteVolumeIcon : FullVolumeIcon }\r\n            </button>\r\n            <ReactSlider\r\n                className={ `horizontal-slider ${ device }` }\r\n                thumbClassName={ `thumb ${ device }` }\r\n                trackClassName='track'\r\n                defaultValue={ sliderDefaultValue() }\r\n                onChange={ value => changeVolume(value)}\r\n                ariaLabel='Volume slider'\r\n                value={ volume }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VolumeControls;","import React, { PureComponent } from 'react';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport PlayButton from '../PlayerControls/PlayButton/PlayButton';\r\nimport VolumeControls from '../PlayerControls/VolumeControls/VolumeControls';\r\n\r\nimport { playerService } from '../PlayerService';\r\nimport { PlayerProps } from '../interfaces';\r\nimport { PlayerTypes } from '../../enums';\r\n\r\nimport './PlayerComponent.css';\r\n\r\n\r\nconst ONAIR = 'onair';\r\nconst M3U = 'https://azura.radioplato.by/public/1/playlist.m3u'\r\nconst PLS = 'https://azura.radioplato.by/public/1/playlist.pls'\r\n\r\nconst copyToClipboard = (text: string) => {\r\n    const dummy = document.createElement('textarea');\r\n\r\n    document.body.appendChild(dummy);\r\n    dummy.value = text;\r\n    dummy.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(dummy);\r\n};\r\n\r\nconst device = isMobileOnly ? 'mobile' : 'desktop';\r\nexport class PlayerComponent extends PureComponent<PlayerProps> {\r\n    state = {\r\n        trackName: ''\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    get isMainPlayer () {\r\n        return this.props.playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n        this.setState({\r\n            trackName: playerService.trackName\r\n        });\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    onTrackChange (trackName: string) {\r\n        if (isMobileOnly) {\r\n            this.setState({ trackName });\r\n        } else {\r\n            const tracktitle = document.querySelector('p.track-title');\r\n\r\n            tracktitle?.classList.remove('shown')\r\n            tracktitle?.classList.add('hidden');\r\n    \r\n            setTimeout(() => { tracktitle?.classList.add('shown'); this.setState({ trackName }) }, 1000)\r\n            setTimeout(() => tracktitle?.classList.remove('hidden'), 2000);\r\n        } \r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnTrackNameChanges((trackName: string) => this.onTrackChange(trackName));\r\n    }\r\n\r\n    handleTrackTitleClick () {\r\n        const trackName = this.state.trackName;\r\n        copyToClipboard(trackName);\r\n        this.setState({ trackName: 'Copied!' });\r\n        setTimeout(() => this.setState({ trackName }), 1000)\r\n    }\r\n    \r\n    renderMainPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <div className='controls-container'>\r\n                    <PlayButton playerType={ this.props.playerType }/>\r\n                    <VolumeControls />\r\n                </div>\r\n                <div className='onair-line'>\r\n                    <p className='onair'>{ ONAIR }</p>\r\n                    <div className='stream-links-container'>\r\n                        <a href={ M3U } target=\"blank\">M3U</a>\r\n                        <p>/</p>\r\n                        <a href={ PLS } target=\"blank\">PLS</a>\r\n                    </div>\r\n                </div>\r\n                <p className= { `track-title ${ device }` }>{ trackName }</p>\r\n            </>\r\n           \r\n        );\r\n    }\r\n\r\n    renderHeaderPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <PlayButton playerType={ this.props.playerType }/>\r\n                <div className='track-title' title='Click to copy the track name to the clipboard' onClick={ () => this.handleTrackTitleClick() }>\r\n                    <div className='overlay'></div>\r\n                    <p>{ trackName }</p>\r\n                </div>\r\n                <VolumeControls />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPlayer () {\r\n        const {\r\n            trackName\r\n        } = this.state;\r\n\r\n        return this.isMainPlayer ?\r\n            this.renderMainPlayer(trackName) :\r\n            this.renderHeaderPlayer(trackName);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={ `${ this.props.playerType }-player ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                { this.renderPlayer() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerComponent;\r\n","import { SocialLinks } from \"./interfaces\";\r\n\r\n\r\nexport const BASIC_SEO_IMG = 'https://res.cloudinary.com/radio-plato/image/upload/v1595347571/og_image_plato_0158fb0d85.jpg';\r\n\r\nexport const HEADER_SOCIAL_LINKS: SocialLinks = {\r\n    mixcloud: 'https://www.mixcloud.com/radioplato/',\r\n    bandcamp: 'https://radioplato.bandcamp.com/',\r\n    facebook: 'https://www.facebook.com/radioplato.by/',\r\n    vk: 'https://vk.com/radioplato',\r\n    email: 'mailto:hey@radioplato.by',\r\n    instagram: 'https://www.instagram.com/radio_plato/',\r\n    telegram: 'https://t.me/radioplato',\r\n    googlePlay: 'https://play.google.com/store/apps/details?id=com.radioplato'\r\n};\r\n\r\nexport const ANDROID_APP = 'ANDROID APP';","import React, { Component } from 'react'\r\n\r\nimport {\r\n  Link,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\nimport googlePlay from '@iconify/icons-cib/google-play';\r\nimport Icon from '@iconify/react';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton';\r\nimport SocialLinksComponent from '../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent';\r\nimport { ANDROID_APP, HEADER_SOCIAL_LINKS } from '../shared/constants';\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Header.css'\r\n\r\n\r\nconst RADIO_PLATO = '';\r\nconst DONATE = 'Donate';\r\nconst DONATE_LINK = 'https://www.patreon.com/radioplato';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className={ `header-container ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                { isMobileOnly && <MenuButton /> }\r\n                <div className='logo-container'>\r\n                    <Link to='/' className='logo-text'>{ RADIO_PLATO }</Link>\r\n                </div>\r\n                <BrowserView>\r\n                    <div className='social-container'>\r\n                        <Switch>\r\n                            <Route exact path='/' render={\r\n                                props => (<SocialLinksComponent { ...props } socialLinks={ HEADER_SOCIAL_LINKS }/>)\r\n                            }/>\r\n                            <Route path='/' render={\r\n                                props => (<PlayerComponent { ...props } playerType={ PlayerTypes.Header }/>)\r\n                            }/>\r\n                        </Switch>\r\n                        \r\n                        <div className=\"android-link-wrapper\">\r\n                            <a className='android-link'\r\n                                target='_blank'\r\n                                href={ HEADER_SOCIAL_LINKS.googlePlay }\r\n                                title={ `A link to Android App` }\r\n                                aria-label={ `A link to Android App` }\r\n                                rel='noopener noreferrer'\r\n                            >\r\n                                <Icon className='google-play-icon' icon={ googlePlay }/>\r\n                                { ANDROID_APP }\r\n                            </a>\r\n                        </div>\r\n                        \r\n                        <div className=\"donate-link-wrapper\">\r\n                            <a className='donate-link'\r\n                                target='_blank'\r\n                                href={ DONATE_LINK }\r\n                                title={ `A link Radio Plato Patreon` }\r\n                                aria-label={ `A link Radio Plato Patreon` }\r\n                                rel='noopener noreferrer'\r\n                            >\r\n                                { DONATE }\r\n                            </a>\r\n                        </div>\r\n    \r\n                    </div>\r\n                </BrowserView>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default Header;","import React from 'react';\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\n\r\nconst DESCRIPTION_LIMIT = 150;\r\n\r\ninterface MetaTagsInformation {\r\n    title?: string;\r\n    thumbnail?: string;\r\n    url?: string;\r\n    description?: string;\r\n    type?: string;\r\n}\r\n\r\ninterface SeoProperties {\r\n    meta?: MetaTagsInformation\r\n}\r\n\r\nfunction Seo ({ meta }: SeoProperties) {\r\n  const description = meta?.description && meta.description.slice(0, DESCRIPTION_LIMIT) + '...';\r\n\r\n  return (\r\n    <Helmet>\r\n        <title>{`Radio Plato | ${ meta?.title }`}</title>\r\n        <meta property='og:title' content={ meta?.title } />\r\n        <meta property='og:image' content={ meta?.thumbnail } />\r\n        <meta property='og:description' content={ description } />\r\n        { meta?.type && (<meta property='og:type' content={ meta.type } />) }\r\n        <meta name='description' content={ description } />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nfunction withSeo (meta: MetaTagsInformation, children: React.ReactNode) {\r\n    return (\r\n        <>\r\n            <Seo meta={ meta }/>\r\n            { children }\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Seo, withSeo };","export enum IndexesOfDay {\r\n    Monday = 0,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday,\r\n    Sunday\r\n};","import { Subject } from 'rxjs';\r\n\r\nimport { IndexGallery, IndexGalleryDto } from './interfaces';\r\nimport { CoverDto, SimpleImage } from '../shared/interfaces';\r\n\r\n\r\nconst GALLERY_REQUEST_INTERVAL = 300000;\r\n\r\nclass GalleryService {\r\n    private indexGallery: IndexGallery | null = null;\r\n    private gallerySubject: Subject<IndexGallery | null>;\r\n\r\n    constructor () {\r\n        this.gallerySubject = new Subject();\r\n\r\n        setInterval(this.fetchIndexGallery.bind(this), GALLERY_REQUEST_INTERVAL);\r\n    }\r\n\r\n    get gallery (): IndexGallery | null {\r\n        return this.indexGallery;\r\n    }\r\n\r\n    set gallery (gallery: IndexGallery | null) {\r\n        this.indexGallery = gallery;\r\n        gallery && this.gallerySubject.next(gallery);\r\n    }\r\n\r\n    subscribeOnGalleryChanges (onNext: Function) {\r\n        return this.gallerySubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async fetchIndexGallery () {\r\n        await fetch(`${ process.env.REACT_APP_BACKEND_URL }/index-gallery`)\r\n            .then(response => response.json())\r\n            .then(data => this.parseIndexGallery(data))\r\n            .then(indexGallery => this.updateIndexGallery(indexGallery));\r\n    }\r\n\r\n    private parseIndexGallery (dto: IndexGalleryDto) {\r\n        return {\r\n            photoExhibition: dto.PhotoExhibition,\r\n            photoExhibitionAuthor: dto.PhotoExhibitionAuthor,\r\n            photoExhibitionDescription: dto.PhotoExhibitionDescription,\r\n            photoExhibitionLink: dto.PhotoExhibitionLink,\r\n            photoExhibitionMedia: dto.PhotoExhibitionMedia.map(imageDto => this.mapImageDto(imageDto)),\r\n            photoExhibitionTitle: dto.PhotoExhibitionTitle,\r\n            regularGallery: dto.RegularGallery.map(imageDto => this.mapImageDto(imageDto)).sort(() => Math.random() - 0.5).slice(0, 10),\r\n            video: dto.Video,\r\n            videoEmbedCode: dto.VideoEmbedCode,\r\n        }\r\n    }\r\n\r\n    private mapImageDto (imageDto: CoverDto): SimpleImage {\r\n        return {\r\n            alternativeText: imageDto.alternativeText,\r\n            caption: imageDto.caption,\r\n            url: imageDto.url\r\n        };\r\n    }\r\n\r\n    private updateIndexGallery (indexGallery: IndexGallery) {\r\n        this.gallery = indexGallery;\r\n    }\r\n}\r\n\r\nconst galleryService = new GalleryService();\r\n\r\nexport default galleryService;","import { Subject } from 'rxjs'\r\nimport moment from 'moment';\r\n\r\nimport { ScheduleShow, ScheduleDto } from './interfaces';\r\nimport { IndexesOfDay } from './enums';\r\n\r\n\r\nconst DATA_REQUEST_INTERVAL = 14400000;\r\nconst CURRENT_SHOW_REFRESH_INTERVAL = 60000;\r\n\r\nenum PeriodicityTypes {\r\n    SingleTime = 'SingleTime',\r\n    Weekly = 'Weekly',\r\n    BiWeekly = 'BiWeekly',\r\n    EveryThirdWeek = 'Every3rdWeek',\r\n}\r\n\r\nconst indexByDayName = new Map([\r\n    [ 'Monday', IndexesOfDay.Monday ],\r\n    [ 'Tuesday', IndexesOfDay.Tuesday ],\r\n    [ 'Wednesday', IndexesOfDay.Wednesday ],\r\n    [ 'Thursday', IndexesOfDay.Thursday ],\r\n    [ 'Friday', IndexesOfDay.Friday ],\r\n    [ 'Saturday', IndexesOfDay.Saturday ],\r\n    [ 'Sunday', IndexesOfDay.Sunday ],\r\n]);\r\n\r\nclass ScheduleService {\r\n    private _schedule: ScheduleShow[][] = [ [], [], [], [], [], [], [] ];\r\n    private _currentShow: ScheduleShow | undefined;\r\n    private scheduleSubject: Subject<ScheduleShow[][]>;\r\n    private currentShowSubject: Subject<ScheduleShow>;\r\n\r\n    constructor () {\r\n        this.scheduleSubject = new Subject();\r\n        this.currentShowSubject = new Subject();\r\n\r\n        this.fetchSchedules().then(() => this.updateCurrentShow());\r\n        setInterval(this.fetchSchedules.bind(this), DATA_REQUEST_INTERVAL);\r\n        setInterval(this.updateCurrentShow.bind(this), CURRENT_SHOW_REFRESH_INTERVAL);\r\n    }\r\n\r\n    set schedule (schedule: ScheduleShow[][]) {\r\n        this._schedule = schedule;\r\n        this.scheduleSubject.next(schedule);\r\n    }\r\n\r\n    get schedule () {\r\n        return this._schedule;\r\n    }\r\n\r\n    get currentShow () {\r\n        return this._currentShow;\r\n    }\r\n\r\n    set currentShow (show: ScheduleShow | undefined) {\r\n        this._currentShow = show;\r\n        this.currentShowSubject.next(show)\r\n    }\r\n\r\n    updateCurrentShow () {\r\n        const weekday = moment().isoWeekday() - 1;\r\n        const currentDate = new Date().toISOString().substr(0, 10);\r\n        const start = (showline: ScheduleShow) => moment(`${ currentDate } ${ showline.startTime }`);\r\n        const end = (showline: ScheduleShow) => moment(`${ currentDate } ${ showline.endTime }`);\r\n\r\n        this.currentShow = this.schedule[weekday].find(showline => {\r\n            return showline.type === 'Show' && moment().isBetween(start(showline), end(showline));\r\n        });\r\n    }\r\n\r\n    async fetchSchedules () {\r\n        await fetch(`${ process.env.REACT_APP_BACKEND_URL }/schedules`)\r\n            .then(response => response.json())\r\n            .then(data => [].concat(...data.map((datum: ScheduleDto) => this.parseScheduleLine(datum))))\r\n            .then(scheduleShows => this.organizeSchedule(scheduleShows));\r\n    }\r\n\r\n    subscribeOnScheduleChanges (onNext: Function) {\r\n        return this.scheduleSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnCurrentShowChanges (onNext: Function) {\r\n        return this.currentShowSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    private parseScheduleLine (dto: ScheduleDto): ScheduleShow[] {\r\n        return dto.OnAirDateTime.map(onAirDateTime => {\r\n            const weekdays = [];\r\n\r\n            for (const [ key, value ] of Object.entries(onAirDateTime)) {\r\n                const dayIndex = indexByDayName.get(key);\r\n\r\n                value && dayIndex !== undefined && weekdays.push(dayIndex);\r\n            }\r\n\r\n            return {\r\n                title: dto.Title,\r\n                description: dto.Description,\r\n                type: dto.Type,\r\n                hide: dto.Hide,\r\n                link: dto.Link,\r\n                startDate: onAirDateTime.StartDate,\r\n                startTime: onAirDateTime.StartTime,\r\n                endDate: onAirDateTime.EndDate,\r\n                endTime: onAirDateTime.EndTime,\r\n                periodicity: onAirDateTime.Periodicity,\r\n                weekdays,\r\n                image: dto ? {\r\n                    alternativeText: dto.ShowImg?.alternativeText,\r\n                    caption: dto.ShowImg?.caption,\r\n                    url: dto.ShowImg?.url\r\n                } : null\r\n            };\r\n        });\r\n    }\r\n\r\n    private organizeSchedule (scheduleShows: ScheduleShow[]) {\r\n        const schedule: ScheduleShow[][]  = [];\r\n\r\n        for (let day = IndexesOfDay.Monday; day <= IndexesOfDay.Sunday; day++) {\r\n            schedule[day] = [];\r\n\r\n            scheduleShows.forEach(show => {\r\n                this.shouldShowBeOnAir(show, day) && schedule[day].push(show)\r\n            });\r\n\r\n            schedule[day].sort(this.sortShowsByDate);\r\n        }\r\n\r\n        this.schedule = schedule;\r\n    }\r\n\r\n    private sortShowsByDate (first: ScheduleShow, second: ScheduleShow) {\r\n        return +first.startTime.slice(0, 2) - +second.startTime.slice(0, 2);\r\n    }\r\n\r\n    private shouldShowBeOnAir (show: ScheduleShow, day: IndexesOfDay): boolean {\r\n        if (show.hide) {\r\n            return false;\r\n        }\r\n\r\n        const showStartDate = moment(show.startDate);\r\n        const dateOfDay = moment().subtract(moment().isoWeekday(), 'days').add(day + 1, 'days');\r\n        const weeksPassed = +(moment().week() - showStartDate.week());\r\n\r\n        switch (show.periodicity) {\r\n            case PeriodicityTypes.Weekly:\r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.BiWeekly:\r\n                return show.weekdays.includes(day) && weeksPassed % 2 === 0;\r\n            case PeriodicityTypes.EveryThirdWeek:\r\n                return show.weekdays.includes(day) && weeksPassed % 3 === 0;\r\n            case PeriodicityTypes.SingleTime:\r\n                return showStartDate.startOf('day').isSame(dateOfDay.startOf('day'));\r\n            default: return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst scheduleService = new ScheduleService();\r\n\r\nexport { scheduleService };","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport { Subscription } from 'rxjs';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport galleryService from './GalleryService';\r\nimport { IndexGallery } from './interfaces';\r\n\r\nimport { scheduleService } from '../shared/schedule/ScheduleService';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './GalleryComponent.css';\r\n\r\n\r\ninterface GalleryComponentState {\r\n    gallery: IndexGallery | null\r\n}\r\n\r\nclass GalleryComponent extends Component {\r\n    state: GalleryComponentState = { gallery: null };\r\n    subscription: Subscription | null = null;\r\n\r\n    componentDidMount() {\r\n        this.subscribeOnGalleryChange();\r\n        galleryService.fetchIndexGallery();\r\n    }\r\n\r\n    subscribeOnGalleryChange () {\r\n        this.subscription = galleryService.subscribeOnGalleryChanges(\r\n            (gallery: IndexGallery) => this.setState({ gallery })\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    graphicContentSelection () {\r\n        const { gallery } = this.state;\r\n\r\n        if (!gallery) {\r\n            return null;\r\n        }\r\n\r\n        if (gallery?.video) {\r\n            return (\r\n                <ReactPlayer\r\n                    url={ gallery.videoEmbedCode }\r\n                    controls={ true }\r\n                    playing={ true }\r\n                    volume={ 1 }\r\n                    muted={ true }\r\n                />\r\n            );\r\n        }\r\n\r\n        if (gallery?.photoExhibition) {\r\n            return (\r\n                <Carousel className='carousel'\r\n                          showArrows={ false }\r\n                          showStatus={ false }\r\n                          showThumbs={ false }\r\n                          showIndicators={ false }\r\n                          autoPlay={ true }\r\n                          infiniteLoop={ true }\r\n                          interval={ 30000 }\r\n                >\r\n                    { gallery.photoExhibitionMedia.map(photo => (\r\n                        <div key={ photo.url }>\r\n                            <img src={ photo.url }\r\n                                 alt={ photo.alternativeText }\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </Carousel>\r\n            );\r\n        }\r\n\r\n        const currentShow = scheduleService.currentShow;\r\n\r\n        if (currentShow && currentShow.image) {\r\n            return (\r\n                currentShow.link\r\n                ? (<Link to={ `${ currentShow.link }` } title={ currentShow.title } >\r\n                    <img className='show-image'\r\n                        src={ currentShow.image.url }\r\n                        alt={ currentShow.image.alternativeText }\r\n                    ></img>\r\n                </Link>)\r\n                : (<img className='show-image'\r\n                    src={ currentShow.image.url }\r\n                    alt={ currentShow.image.alternativeText }\r\n                ></img>)\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Carousel className='carousel'\r\n                      showArrows={ false }\r\n                      showStatus={ false }\r\n                      showThumbs={ false }\r\n                      showIndicators={ false }\r\n                      autoPlay={ true }\r\n                      infiniteLoop={ true }\r\n                      interval={ 30000 }\r\n            >\r\n                { gallery.regularGallery.map(photo => (\r\n                    <div key={ photo.url }>\r\n                        <img className='regular-image'\r\n                             src={ photo.url }\r\n                             alt={ photo.alternativeText }\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='visual-container'>\r\n                { this.graphicContentSelection() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default GalleryComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { NewsCard } from '../interfaces';\r\nimport { AD_CATEGORY } from '../constants';\r\n\r\nimport './NewsCardComponent.css';\r\n\r\n\r\ninterface LinkElementParameters {\r\n    children: React.ReactNode;\r\n    newsCard: NewsCard;\r\n}\r\n\r\ninterface TagElementParameters {\r\n    category: string;\r\n}\r\n\r\ninterface NewsCardParameters {\r\n    newsCard: NewsCard;\r\n    type?: string;\r\n}\r\n\r\nfunction LinkElement({ newsCard, children }: LinkElementParameters) {\r\n    const slug = newsCard.slug;\r\n    const route = `/news/${ newsCard.category.toLowerCase() }/${ slug }`;\r\n\r\n    return slug ?\r\n        <Link to={ route } title={ newsCard.title }>{ children }</Link> :\r\n        <a href={ newsCard.link } title={ newsCard.title } rel='noopener noreferrer' target='_blank'>{ children }</a>;\r\n}\r\n\r\nfunction TagElement({ category }: TagElementParameters) {\r\n    const link = `/news/${ category.toLowerCase() }`;\r\n    const tag = `∙ ${ category } ∙`;\r\n\r\n    return category !== AD_CATEGORY ? <Link to={ link } title={ category } className='news-card-tag'>{ tag }</Link> : <p className='news-card-tag'>{ tag }</p>\r\n}\r\n\r\nfunction NewsCardComponent({ newsCard, type }: NewsCardParameters) {\r\n    const {\r\n        excerpt,\r\n        newsCover,\r\n        title,\r\n        category\r\n    } = newsCard;\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n\r\n    return (\r\n        <div className={ `news-card ${ type } ${ device }` }>\r\n            <div className='news-card-image'>\r\n                <LinkElement newsCard={ newsCard }>\r\n                    <img src={ newsCover.url } loading='lazy' alt={ newsCover.alternativeText }/>\r\n                </LinkElement>\r\n            </div>\r\n            <div className='news-card-text'>\r\n                <TagElement category={ category } />\r\n                <LinkElement newsCard={ newsCard }>\r\n                    <h2>{ title }</h2>\r\n                    <p className='news-card-excerpt'>{ excerpt }</p>\r\n                </LinkElement>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default NewsCardComponent;","export const AD_CATEGORY = 'Ad';\r\n","import { AdvertisementDto, Advertisement } from './interfaces';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport moment from 'moment';\r\n\r\n\r\nenum AdPlacements {\r\n    NewsList = 'NewsList',\r\n    NewsPost = 'NewsPost'\r\n}\r\n\r\nclass AdService {\r\n    private _advertisements: Advertisement[] = [];\r\n    private advertisementsSubject: Subject<Advertisement[] | null>;\r\n    private newsCardAdSubject: Subject<Advertisement | null>;\r\n    private newsPostAdSubject: Subject<Advertisement | null>;\r\n\r\n    constructor () {\r\n        this.advertisementsSubject = new Subject();\r\n        this.newsCardAdSubject = new Subject();\r\n        this.newsPostAdSubject = new Subject();\r\n\r\n        this.fetchAdvertisements();\r\n    }\r\n\r\n    get advertisements () {\r\n        return this._advertisements;\r\n    }\r\n\r\n    set advertisements (ads: any) {\r\n        this._advertisements = ads;\r\n\r\n        this.advertisementsSubject.next(this.advertisements);\r\n        this.newsCardAdSubject.next(this.getSpecificAdvertisementByType(AdPlacements.NewsList));\r\n        this.newsPostAdSubject.next(this.getSpecificAdvertisementByType(AdPlacements.NewsPost));\r\n    }\r\n\r\n    subscribeOnAdvertisementsChanges (onNext: Function) {\r\n        return this.advertisementsSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnNewsCardAdUpdate (onNext: Function) {\r\n        return this.newsCardAdSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnNewsPostAdUpdate (onNext: Function) {\r\n        return this.newsPostAdSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async fetchAdvertisements () {\r\n        await fetch(`${ process.env.REACT_APP_BACKEND_URL }/advertisements`)\r\n            .then(response => response.json())\r\n            .then(data => this.parseAdvertisements(data))\r\n            .then(advertisements => this.updateAdvertisements(advertisements));\r\n    }\r\n\r\n    private getSpecificAdvertisementByType (type: string) {\r\n        return this.advertisements.find((ad: Advertisement) => ad.placement === type && moment().isBefore(moment(ad.endDate)));\r\n    }\r\n\r\n    private parseAdvertisements (data: AdvertisementDto[]) {\r\n        return data.map(ad => {\r\n            return {\r\n                isActive: ad.AdActive,\r\n                endDate: ad.AdEnd,\r\n                image: {\r\n                    alternativeText: ad.AdImage.alternativeText,\r\n                    caption: ad.AdImage.caption,\r\n                    url: ad.AdImage.url\r\n                },\r\n                link: ad.AdLink,\r\n                placement: ad.AdPlacement,\r\n                startDate: ad.AdStart,\r\n                text: ad.AdText,\r\n                title: ad.AdTitle\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateAdvertisements (advertisements: any) {\r\n        this.advertisements = advertisements;\r\n    }\r\n}\r\n\r\nconst adService = new AdService();\r\n\r\nexport default adService;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Subscription } from 'rxjs';\r\nimport moment from 'moment';\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport NewsCardComponent from './NewsCardComponent/NewsCardComponent';\r\nimport adService from './../advertisement/AdService';\r\n\r\nimport { NewsDto, NewsCard } from './interfaces';\r\nimport { Advertisement } from '../advertisement/interfaces';\r\nimport { NewsListTypes } from '../shared/enums';\r\nimport { AD_CATEGORY } from './constants';\r\nimport { BASIC_SEO_IMG } from '../shared/constants';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './NewsListComponent.css';\r\n\r\n\r\nconst NEWS_LIMIT = 12;\r\nconst VISIBILITY_LIMIT_PERCENTAGE = 75;\r\nconst NEWS = 'NEWS';\r\nconst NEWS_LIST_SEO_TITLE = 'News';\r\nconst NEWS_LIST_SEO_DESCRIPTION = 'The best place to read about electronic music, both local and global.';\r\nconst LOAD_MORE_TEXT = 'LOAD MORE';\r\n\r\ninterface NewsListComponentProperties {\r\n    type: string;\r\n    category?: string;\r\n}\r\n\r\nexport class NewsListComponent extends Component<NewsListComponentProperties> {\r\n    state = {\r\n        advertisement: null,\r\n        newsCards: [],\r\n        page: 0,\r\n        loading: false,\r\n        end: false\r\n    }\r\n    subscription: Subscription | null = null;\r\n\r\n    parseNewsCard (newsDto: NewsDto): NewsCard {\r\n        return {\r\n            excerpt: newsDto.Excerpt,\r\n            category: newsDto.Category,\r\n            newsCover: {\r\n                alternativeText: newsDto.PostCover.alternativeText,\r\n                caption: newsDto.PostCover.caption,\r\n                url: newsDto.PostCover.url\r\n            },\r\n            slug: newsDto.Slug,\r\n            title: newsDto.Title,\r\n            publishDate: newsDto.publish_at\r\n        };\r\n    }\r\n\r\n    sortCardsByDate (first: NewsCard, second: NewsCard) {\r\n        return moment(second.publishDate).diff(moment(first.publishDate));\r\n    }\r\n\r\n    handleResponse (newsCards: NewsCard[]) {\r\n        if (newsCards && newsCards.length) {\r\n            const cards = [ ...this.state.newsCards, ...newsCards ].sort(this.sortCardsByDate);\r\n\r\n            this.setState({\r\n                newsCards: cards,\r\n                loading: false,\r\n                page: this.state.page + 1\r\n            });\r\n        } else {\r\n            this.setState({ end: true });\r\n        }\r\n    }\r\n\r\n    fetchNews = () => {\r\n        const { page } = this.state;\r\n        const { category } = this.props;\r\n        const start = page * NEWS_LIMIT;\r\n        const filter = category ? `Category=${ category[0].toUpperCase() + category.slice(1) }&` : '';\r\n\r\n        this.setState({ loading: true });\r\n\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/posts?${ filter }_sort=publish_at:DESC&_start=${ start }&_limit=${ NEWS_LIMIT }`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: NewsDto) => this.parseNewsCard(datum)))\r\n            .then(newsCards => this.handleResponse(newsCards));\r\n    }\r\n\r\n    advertisementToNewsCard (advertisement: Advertisement | null) {\r\n        return advertisement ? {\r\n            excerpt: advertisement ? advertisement.text : '',\r\n            category: AD_CATEGORY,\r\n            newsCover: advertisement ? advertisement.image : {},\r\n            link: advertisement ? advertisement.link : '',\r\n            title: advertisement ? advertisement.title : '',\r\n            publishDate: advertisement ? advertisement.startDate : ''\r\n        } : null;\r\n    }\r\n\r\n    renderSimpleNewsList (newsCards: NewsCard[]) {\r\n        return newsCards.length ? (\r\n            <div className='simple-news'>\r\n                <div className='news-list-title'>\r\n                    <Link to='/news'>\r\n                        <p>{ NEWS }</p>\r\n                    </Link>\r\n                </div>\r\n                { newsCards.slice(0, 3).map(newsCard => (\r\n                    <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='simple' />\r\n                )) }\r\n            </div>\r\n        ) : null;\r\n    }\r\n\r\n    renderFullNewsList (newsCards: NewsCard[], advertisement: Advertisement | null) {\r\n        const { loading, end } = this.state;\r\n        const adNewsCard = this.advertisementToNewsCard(advertisement);\r\n\r\n        return newsCards.length ? (\r\n            <div onScroll={ this.handleScroll } className={ `news-list ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                <Seo meta={{\r\n                        title: NEWS_LIST_SEO_TITLE,\r\n                        description: NEWS_LIST_SEO_DESCRIPTION,\r\n                        thumbnail: BASIC_SEO_IMG\r\n                    }}\r\n                />\r\n                <div className='news-cards'>\r\n                    <div className='latest-news'>\r\n                        <div className='main-news'>\r\n                            <NewsCardComponent key={ newsCards[0].slug } newsCard={ newsCards[0] } type='main' />\r\n                        </div>\r\n                        <div className='fresh-news'>\r\n                            { adNewsCard ? (<NewsCardComponent newsCard={ adNewsCard } type='fresh'/>) : null }\r\n                            { newsCards.slice(1, 5).map(newsCard => (\r\n                                <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='fresh' />\r\n                            )) }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className='other-news'>\r\n                        { newsCards.slice(5, newsCards.length).map(newsCard => (\r\n                            <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='other' />\r\n                        )) }\r\n                    </div>\r\n                </div>\r\n                { isMobileOnly && !loading && !end && (\r\n                    <div onClick={ this.fetchNews } className=\"load-more-button\">\r\n                        <p>{ LOAD_MORE_TEXT }</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        ) : null;\r\n    }\r\n\r\n    renderNewsCards (newsCards: NewsCard[], advertisement: Advertisement | null) {\r\n        const { type } = this.props;\r\n\r\n        return type === NewsListTypes.Full ? this.renderFullNewsList(newsCards, advertisement) : this.renderSimpleNewsList(newsCards);\r\n    }\r\n\r\n    componentDidMount () {\r\n        adService.fetchAdvertisements();\r\n        this.fetchNews();\r\n        this.subscribeOnAdvertisementChange();\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    subscribeOnAdvertisementChange () {\r\n        this.subscription = adService.subscribeOnNewsCardAdUpdate(\r\n            (advertisement: Advertisement) => this.setState({ advertisement })\r\n        );\r\n    }\r\n\r\n    handleScroll = (event: any) => {\r\n        const { loading, end } = this.state;\r\n        const container = event.target as Element;\r\n        const percentsScrolled = (container.scrollTop + window.innerHeight) / container.scrollHeight * 100;\r\n\r\n        if (percentsScrolled > VISIBILITY_LIMIT_PERCENTAGE) {\r\n            !loading && !end && this.fetchNews();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            advertisement,\r\n            newsCards\r\n        } = this.state;\r\n\r\n        return this.renderNewsCards(newsCards, advertisement);\r\n    }\r\n}\r\n  \r\nexport default NewsListComponent;","import moment from 'moment';\r\nimport React from 'react'\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ScheduleShow } from './interfaces'\r\n\r\nimport './ScheduleShowline.css'\r\n\r\n\r\ninterface ScheduleShowlineProperties {\r\n    showline: ScheduleShow,\r\n    selectedDay: number\r\n}\r\n\r\nconst FORMAT = 'HH:mm:ss';\r\n\r\nfunction showlineWrapper (showline: ScheduleShow, selectedDay: number) {\r\n    const {\r\n        title,\r\n        description,\r\n        link,\r\n        startTime,\r\n        endTime\r\n    } = showline;\r\n    const interval = startTime && endTime ? `${ startTime.slice(0, 5) } - ${ endTime.slice(0, 5) }` : '';\r\n    const href = link ? link : null;\r\n    const isNow = moment().isoWeekday() - 1 === selectedDay && moment(moment().format(FORMAT), FORMAT).isBetween(moment(startTime, FORMAT), moment(endTime, FORMAT));\r\n    const content = (\r\n        <div className={ `show-title-container ${ isMobileOnly ? 'mobile' : 'desktop' } ${ isNow && 'white' }` }>\r\n            <div className='show-date'>\r\n                <p>{ interval }</p>\r\n            </div>\r\n            <div className='show-title'>\r\n                <p>{ title ? title : '' }</p>\r\n            </div>\r\n            <BrowserView>\r\n                <div className='show-desc'>\r\n                    <p>{ description ? description : '' }</p>\r\n                </div>\r\n            </BrowserView>\r\n        </div>\r\n    );\r\n\r\n    return href ? (<Link to={ href }>{ content }</Link>) : (<div>{ content }</div>);\r\n}\r\n\r\nconst ScheduleShowline = ({ showline, selectedDay }: ScheduleShowlineProperties) => showlineWrapper(showline, selectedDay);\r\n\r\nexport default ScheduleShowline ","import React, { Component } from 'react'\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport moment from 'moment';\r\n\r\nimport ScheduleShowline from './ScheduleShowline'\r\n\r\nimport { scheduleService } from './ScheduleService';\r\n\r\nimport { ScheduleShow } from './interfaces';\r\nimport { IndexesOfDay } from './enums';\r\n\r\nimport { withSeo } from '../wrappers/seo/Seo'\r\nimport { withScroll } from '../wrappers/scrollable/Scrollable';\r\nimport { BASIC_SEO_IMG } from '../../shared/constants';\r\nimport './ScheduleComponent.css'\r\n\r\n\r\nconst DAYS_OF_WEEK = [\r\n    'MON',\r\n    'TUE',\r\n    'WED',\r\n    'THU',\r\n    'FRI',\r\n    'SAT',\r\n    'SUN'\r\n];\r\n\r\nconst SCHEDULE = 'SCHEDULE';\r\nconst SCHEDULE_SEO_TITLE = 'Schedule'\r\nconst SCHEDULE_SEO_DESCRIPTION = 'We broadcast 24/7, here is what you will hear.'\r\n\r\nclass ScheduleComponent extends Component {\r\n    scheduleSubscription: Subscription | null = null;\r\n    currentShowSubscription: Subscription | null = null;\r\n    state = {\r\n        schedule: scheduleService.schedule,\r\n        selectedDay: moment().isoWeekday() - 1\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnScheduleChanges();\r\n        this.subscribeOnCurrentShowChanges();\r\n    }\r\n\r\n    subscribeOnScheduleChanges () {\r\n        this.scheduleSubscription = scheduleService.subscribeOnScheduleChanges(\r\n            (schedule: ScheduleShow[][]) => this.setState({ schedule })\r\n        );\r\n    }\r\n\r\n    subscribeOnCurrentShowChanges () {\r\n        this.currentShowSubscription = scheduleService.subscribeOnCurrentShowChanges(\r\n            () => this.setState(this.state)\r\n        );\r\n    }\r\n\r\n    scheduleShowlineBuilder = (showline: ScheduleShow) => {\r\n        return (\r\n            <ScheduleShowline\r\n                showline={ showline }\r\n                selectedDay={ this.state.selectedDay }\r\n                key={ `${ this.state.selectedDay }-${ showline.title }-${ showline.startDate }-${ showline.startTime }` }\r\n            />\r\n        );\r\n    }\r\n\r\n    selectDay = (day: IndexesOfDay) => {\r\n        this.setState({\r\n            selectedDay: day\r\n        });\r\n    };\r\n\r\n    handleDropdownChoise = (event: any) => {\r\n        this.selectDay(event.currentTarget.value)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.scheduleSubscription?.unsubscribe();\r\n        this.currentShowSubscription?.unsubscribe();\r\n    }\r\n\r\n    renderDropdown = () => {\r\n        const { selectedDay } = this.state;\r\n\r\n        return (\r\n            <select value={ selectedDay } onChange={ this.handleDropdownChoise }> \r\n                { DAYS_OF_WEEK.map((day, index) => (\r\n                    <option key={ `${ day.toLowerCase() }-${ index }` }\r\n                            value={ index }\r\n                    >\r\n                        { day }\r\n                    </option>\r\n                )) }\r\n            </select>\r\n        )\r\n    }\r\n\r\n    renderButtons = () => {\r\n        const { selectedDay } = this.state;\r\n\r\n        return DAYS_OF_WEEK.map((day, index) => (\r\n            <button className={ `schedule-day-button ${ selectedDay === index ? 'active' : ''}` }\r\n                    onClick={ () => this.selectDay(index) }\r\n                    key={ `${ day.toLowerCase() }-${ index }` }\r\n            >\r\n                { day }\r\n            </button>\r\n        ))\r\n    }\r\n\r\n    renderDailySchedule = () => {\r\n        const {\r\n            schedule,\r\n            selectedDay\r\n        } = this.state;\r\n\r\n        return schedule[selectedDay].length ?\r\n            schedule[selectedDay].map((playlistShow: ScheduleShow) => this.scheduleShowlineBuilder(playlistShow)) :\r\n            [];\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={ `schedule-container ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                <div className='schedule-headline-container'>        \r\n                    <div className='schedule-title'>\r\n                        <p>{ SCHEDULE }</p>\r\n                    </div>\r\n                    {\r\n                        isMobileOnly\r\n                            ? (<div>\r\n                                { this.renderDropdown() }\r\n                            </div>)\r\n                            : (<div className='schedule-day'>\r\n                                { this.renderButtons() }\r\n                            </div>)\r\n                    }\r\n                    \r\n                    \r\n                </div>\r\n                <div>\r\n                    { this.renderDailySchedule() }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SchedulePageComponent = () => withSeo({\r\n    title: SCHEDULE_SEO_TITLE,\r\n    description: SCHEDULE_SEO_DESCRIPTION,\r\n    thumbnail: BASIC_SEO_IMG\r\n}, withScroll(<ScheduleComponent />));\r\n  \r\nexport { ScheduleComponent, SchedulePageComponent };","import React from 'react';\r\n\r\nimport './Scrollable.css';\r\n\r\n\r\nfunction withScroll (children: React.ReactNode) {\r\n    return (\r\n        <div className='scrollable-container'>\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { withScroll };","import React, { Component } from 'react';\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\nimport GalleryComponent from '../gallery/GalleryComponent';\r\nimport NewsListComponent from '../news/NewsListComponent';\r\nimport { ScheduleComponent } from '../shared/schedule/ScheduleComponent';\r\nimport { BASIC_SEO_IMG } from '../shared/constants';\r\n\r\nimport { NewsListTypes } from '../shared/enums';\r\n\r\nimport './StartPageComponent.css';\r\n\r\nconst INDEX_SEO_TITLE = 'From Minsk with ❤'\r\nconst INDEX_SEO_DESCRIPTION = 'Radio Plato is a space for music lovers'\r\n\r\nexport class StartPageComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div className={ `start-page-container ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                    <Seo meta={{\r\n                            title: INDEX_SEO_TITLE,\r\n                            description: INDEX_SEO_DESCRIPTION,\r\n                            thumbnail: BASIC_SEO_IMG\r\n                        }}\r\n                    />\r\n                { isMobileOnly ? null : <GalleryComponent /> }\r\n                <NewsListComponent type={ NewsListTypes.Simple }/>\r\n                <ScheduleComponent />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartPageComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { ShowCard } from '../interfaces';\r\n\r\nimport './ShowCardComponent.css';\r\n\r\ninterface ShowCardParameters {\r\n    showCard: ShowCard\r\n}\r\n\r\nfunction ShowCardComponent({ showCard }: ShowCardParameters) {\r\n    const {\r\n        excerpt,\r\n        showCover,\r\n        slug,\r\n        title,\r\n    } = showCard;\r\n    const route = `/shows/${ slug }`;\r\n\r\n    return (\r\n        <Link to={ route } title={ title }>\r\n            <div className={ `show-card ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                <img src={ showCover.url } loading='lazy' alt={ showCover.alternativeText }/>\r\n                <h2>{ title }</h2>\r\n                <p>{ excerpt }</p>\r\n            </div>    \r\n        </Link>\r\n    );\r\n}\r\n  \r\nexport default ShowCardComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport ShowCardComponent from './ShowCardComponent/ShowCardComponent';\r\n\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\nimport { BASIC_SEO_IMG } from '../shared/constants';\r\nimport { ShowDto, ShowCard } from './interfaces';\r\n\r\nimport './ShowListComponent.css';\r\n\r\n\r\nconst SHOW_LIST_SEO_TITLE = 'Shows'\r\nconst SHOW_LIST_SEO_DESCRIPTION = 'Awesome shows from Radio Plato crew'\r\n\r\n\r\nexport class ShowListComponent extends Component {\r\n    state = {\r\n        showCards: []\r\n    }\r\n\r\n    parseShowCard (showDto: ShowDto): ShowCard {\r\n        return {\r\n            excerpt: showDto.Excerpt,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            slug: showDto.Slug,\r\n            title: showDto.Title,\r\n            weight: showDto.Weight\r\n        };\r\n    }\r\n\r\n    fetchShows () {\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/shows`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: ShowDto) => this.parseShowCard(datum)))\r\n            .then(shows => this.setState({ showCards: shows.sort((a: ShowCard, b: ShowCard) => a.weight - b.weight) }));\r\n    }\r\n\r\n    renderShowCards (showCards: ShowCard[]) {\r\n        return showCards.map(showCard => (<ShowCardComponent key={ showCard.slug } showCard={ showCard }></ShowCardComponent>))\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchShows();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showCards\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={ `show-list ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                 <Seo meta={{\r\n                        title: SHOW_LIST_SEO_TITLE,\r\n                        description: SHOW_LIST_SEO_DESCRIPTION,\r\n                        thumbnail: BASIC_SEO_IMG\r\n                    }}\r\n                />\r\n                <h1>Shows</h1>\r\n                <div className='show-cards'>\r\n                    { this.renderShowCards(showCards) }\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowListComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { ShowEpisode } from '../interfaces';\r\n\r\nimport './ShowEpisodesComponent.css';\r\n\r\n\r\ninterface ShowEpisodesProperties {\r\n    mixcloudPlaylist: string;\r\n}\r\n\r\nexport class ShowEpisodesComponent extends Component<ShowEpisodesProperties> {\r\n    state = {\r\n        showEpisodes: []\r\n    }\r\n\r\n    parseShowEpisode (datum: any): ShowEpisode {\r\n        return {\r\n            title: datum.name,\r\n            image: datum.pictures['1024wx1024h'],\r\n            url: datum.url,\r\n            date: datum.created_time,\r\n            slug: datum.slug\r\n        }\r\n    }\r\n\r\n    parseShowEpisodes (playlistDto: any): ShowEpisode[] | null {\r\n        if (!playlistDto || !playlistDto.data || !playlistDto.data.length) {\r\n            return null;\r\n        }\r\n        \r\n        return playlistDto.data.map((datum: any) => this.parseShowEpisode(datum));\r\n    }\r\n\r\n    fetchPlaylist () {\r\n        const { mixcloudPlaylist } = this.props;\r\n        \r\n        fetch(`${ mixcloudPlaylist }`)\r\n            .then(response => response.json())\r\n            .then(playlist => this.parseShowEpisodes(playlist)?.reverse().slice(0, 9))\r\n            .then(showEpisodes => this.setState({ showEpisodes }));\r\n    }\r\n\r\n    renderShowEpisode (episode: ShowEpisode) {\r\n        const key = `${ episode.slug }-${ new Date().getTime() }`;\r\n        const date = new Date(episode.date).toISOString().slice(0,10).split('-').reverse().join('.');\r\n\r\n        return (\r\n            <a key={ key } href={ episode.url } rel='noopener noreferrer' target='_blank'>\r\n                <div className='episode-container'>\r\n                    <img className='episode-image' src={ episode.image } alt={ episode.title }/>\r\n                    <div className='episode-information'>\r\n                        <h3>{ episode.title }</h3>\r\n                    </div>\r\n                    <p>{ date }</p>\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n\r\n    renderShowEpisodes (episodes: ShowEpisode[]) {\r\n        return episodes && episodes.length ? (\r\n            <>\r\n                <h2>LATEST EPISODES</h2>\r\n                <div className='episode-cards'>\r\n                    { episodes.map(episode => this.renderShowEpisode(episode)) }\r\n                </div>\r\n            </>\r\n        ) : null;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchPlaylist();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showEpisodes\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={ `episode-list ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                { this.renderShowEpisodes(showEpisodes) }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowEpisodesComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport SocialLinksComponent from '../../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport ShowEpisodesComponent from '../ShowEpisodesComponent/ShowEpisodesComponent';\r\nimport ShowCardComponent from '../ShowCardComponent/ShowCardComponent';\r\n\r\nimport { Seo } from '../../shared/wrappers/seo/Seo'\r\nimport { ShowDto, Show, ShowCard } from '../interfaces';\r\n\r\nimport './ShowComponent.css';\r\n\r\n\r\ninterface ShowComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface ShowComponentState {\r\n    show: Show | null;\r\n    showCards: ShowCard[];\r\n}\r\n\r\nexport class ShowComponent extends Component<ShowComponentProperties> {\r\n    state: ShowComponentState = {\r\n        show: null,\r\n        showCards: []\r\n    }\r\n\r\n    parseShow(showDto: ShowDto): Show | null {\r\n        return showDto ? {\r\n            description: showDto.Description,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            title: showDto.Title,\r\n            slug: showDto.Slug,\r\n            showLinks: {\r\n                mixcloud: showDto.ShowLink.mixcloud,\r\n                spotify: showDto.ShowLink.spotify,\r\n                itunes: showDto.ShowLink.itunes,\r\n                castbox: showDto.ShowLink.castbox,\r\n                facebook: showDto.ShowLink.facebook,\r\n                vk: showDto.ShowLink.vk,\r\n                instagram: showDto.ShowLink.instagram,\r\n                telegram: showDto.ShowLink.telegram,\r\n                googlepodcasts: showDto.ShowLink.googlepodcasts,\r\n                soundcloud: showDto.ShowLink.soundcloud,\r\n                patreon: showDto.ShowLink.patreon, \r\n                youtube: showDto.ShowLink.youtube,\r\n            },\r\n            mixcloudPlaylist: showDto.MixcloudPlaylist,\r\n        } : null\r\n    }\r\n\r\n    parseShowCard (showDto: ShowDto): ShowCard {\r\n        return {\r\n            excerpt: showDto.Excerpt,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            slug: showDto.Slug,\r\n            title: showDto.Title,\r\n            weight: showDto.Weight\r\n        };\r\n    }\r\n\r\n    fetchShow () {\r\n        const { slug } = this.props;\r\n\r\n        return fetch(`${ process.env.REACT_APP_BACKEND_URL }/shows?Slug=${ slug }`)\r\n            .then(response => response.json())\r\n            .then((data: ShowDto[]) => this.parseShow(data[0]))\r\n            .then(show => this.setState({ show }));\r\n    }\r\n\r\n    fetchShows () {\r\n        return fetch(`${ process.env.REACT_APP_BACKEND_URL }/shows`)\r\n            .then(response => response.json())\r\n            .then((data: ShowDto[]) => data.map(datum => this.parseShowCard(datum)))\r\n            .then(showCards => this.setState({ showCards }));\r\n    }\r\n    \r\n\r\n    async componentDidMount () {\r\n        await this.fetchShow();\r\n        await this.fetchShows();\r\n    }\r\n\r\n    componentDidUpdate (previousProps: ShowComponentProperties) {\r\n        if (this.props.slug !== previousProps.slug) {\r\n            this.setState({\r\n                show: null,\r\n                showCards: []\r\n            });\r\n            this.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const { show, showCards } = this.state;\r\n        const imageSrc = show ? show.showCover.url : '';\r\n\r\n        return show ? (\r\n            <article className={ `show ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                <Seo meta={{\r\n                        title: show.title,\r\n                        description: show.description,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='show-description'>\r\n                    <div className='information'>\r\n                        <h1>{ show.title }</h1>\r\n                        <p>{ show.description }</p>\r\n                        <SocialLinksComponent socialLinks={ show.showLinks }/>\r\n                    </div>\r\n                    <div className='show-cover'>\r\n                        <img src={ imageSrc } loading='lazy' alt={ show.showCover.alternativeText }/>\r\n                    </div>\r\n                </div>\r\n                {  navigator.userAgent !== \"ReactSnap\" && <ShowEpisodesComponent mixcloudPlaylist={ show.mixcloudPlaylist }/> }\r\n                <div className=\"title-container\">\r\n                    <h2 className=\"more-shows-title\">MORE SHOWS</h2>\r\n                </div>\r\n                <div className=\"more-shows\">\r\n                {\r\n                    showCards.filter(showCard => showCard.slug !== this.state.show?.slug)\r\n                        .sort(() => 0.5 - Math.random())\r\n                        .slice(0, 3)\r\n                        .map(showCard => (<ShowCardComponent key={ showCard.slug } showCard={ showCard }></ShowCardComponent>))\r\n                }\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default ShowComponent;","\r\nimport React from 'react';\r\n\r\nimport { Advertisement } from '../interfaces';\r\n\r\nimport './AdComponent.css';\r\n\r\ninterface AdComponentProperties {\r\n    advertisement: Advertisement | null\r\n}\r\n\r\nfunction AdComponent ({ advertisement }: AdComponentProperties) {\r\n    return (\r\n        <a className='da-container' href={ advertisement?.link } rel='noopener noreferrer' target='_blank'>\r\n            <div className='da-image'>\r\n                <img src={ advertisement?.image.url } alt={ advertisement?.image.alternativeText }/>\r\n            </div>\r\n            <div className='da-text'>\r\n                <h2>\r\n                    { advertisement?.title }\r\n                </h2>\r\n                <p>\r\n                    { advertisement?.text }\r\n                </p>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default AdComponent;\r\n","export enum ProjectTag {\r\n    Animation = 'Animation',\r\n    Commercials = 'Commercials',\r\n    Foley = 'Foley',\r\n    Jingles = 'Jingles',\r\n    Mobile = 'Mobile',\r\n    PodcastsVoice = 'PodcastsVoice',\r\n}\r\n\r\nexport enum FilterItem {\r\n    All = 'All',\r\n    Animation = 'Animation',\r\n    Commercials = 'Commercials',\r\n    Foley = 'Foley',\r\n    Jingles = 'Jingles',\r\n    Mobile = 'Mobile',\r\n    PodcastsVoice = 'Podcasts & Voice',\r\n}","import React, { Component } from 'react';\r\nimport { Subscription } from 'rxjs';\r\nimport moment from 'moment';\r\n\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport AdComponent from '../../advertisement/AdComponent/AdComponent';\r\nimport adService from '../../advertisement/AdService';\r\n\r\nimport { Seo } from '../../shared/wrappers/seo/Seo'\r\nimport { Advertisement } from '../../advertisement/interfaces';\r\nimport { NewsDto, News } from '../interfaces';\r\n\r\nimport './NewsComponent.css';\r\nimport { isMobileOnly } from 'react-device-detect';\r\nimport { Link } from 'react-router-dom';\r\nimport { Locale, LocaleString } from '../../shared/interfaces';\r\n\r\n\r\nconst localeStringByLocale = new Map([\r\n    [ Locale.English, LocaleString.English ],\r\n    [ Locale.Belorussian, LocaleString.Belorussian ],\r\n    [ Locale.Russian, LocaleString.Russian ],\r\n]);\r\n\r\ninterface NewsComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface NewsComponentState {\r\n    news: News | null,\r\n    advertisement: Advertisement | null,\r\n    articles: News[],\r\n    locales: Locale[],\r\n    currentLocale: Locale\r\n}\r\n\r\nconst DATE_FORMAT = 'DD.MM.YYYY';\r\n\r\nexport class NewsComponent extends Component<NewsComponentProperties> {\r\n    state: NewsComponentState = {\r\n        news: null,\r\n        advertisement: null,\r\n        articles: [],\r\n        locales: [ Locale.English ],\r\n        currentLocale: Locale.English\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    parseNews(newsDto: NewsDto, isCurrent = false): News | null {\r\n        if (newsDto && isCurrent) {\r\n            const currentLocale = newsDto.locale;\r\n            const locales = Array.from(new Set([\r\n                currentLocale,\r\n                ...newsDto.localizations.map(localization => localization.locale),\r\n            ])).sort();\r\n\r\n            this.setState({ locales, currentLocale });\r\n        }\r\n\r\n        return newsDto ? {\r\n            title: newsDto.Title,\r\n            content: newsDto.Content,\r\n            category: newsDto.Category,\r\n            wordsBy: newsDto.WordsBy,\r\n            photosBy: newsDto.PhotosBy,\r\n            excerpt:  newsDto.Excerpt,\r\n            slug: newsDto.Slug,\r\n            publishDate: newsDto.publish_at,\r\n            newsCover: {\r\n                alternativeText: newsDto.PostCover.alternativeText,\r\n                caption: newsDto.PostCover.caption,\r\n                url: newsDto.PostCover.url\r\n            },\r\n            locale: newsDto.locale,\r\n            localizations: newsDto.localizations\r\n        } : null\r\n    }\r\n\r\n    fetchCurrentArticle (locale: Locale = Locale.English) {\r\n        const { slug } = this.props;\r\n        const localeString = localeStringByLocale.get(locale)?.toLowerCase();\r\n        const localePostfix = locale === Locale.English ? '' : `-${ localeString }`;\r\n\r\n        return fetch(`${ process.env.REACT_APP_BACKEND_URL }/posts?Slug=${ slug }${ localePostfix }&_locale=${ locale }`)\r\n            .then(response => response.json())\r\n            .then((data: NewsDto[]) => this.parseNews(data[0], true))\r\n            .then(news => this.setState({ news }));\r\n    }\r\n\r\n    fetchLastArticles () {\r\n        const category = this.state.news?.category;\r\n        const filter = category ? `Category=${ category[0].toUpperCase() + category.slice(1) }&` : '';\r\n\r\n        return fetch(`${ process.env.REACT_APP_BACKEND_URL }/posts?${ filter }_sort=publish_at:DESC&_start=0&_limit=10`)\r\n            .then(response => response.json())\r\n            .then((data: NewsDto[]) => data.map(datum => this.parseNews(datum)))\r\n            .then(articles => this.setState({ articles }));\r\n    }\r\n    \r\n    async componentDidMount () {\r\n        await this.fetchCurrentArticle();\r\n\r\n        this.subscribeOnGalleryChange();\r\n        adService.fetchAdvertisements();\r\n\r\n        await this.fetchLastArticles();\r\n    }\r\n\r\n    componentDidUpdate (previousProps: NewsComponentProperties) {\r\n        if (this.props.slug !== previousProps.slug) {\r\n            this.setState({\r\n                news: null,\r\n                advertisement: null,\r\n                articles: []\r\n            });\r\n            this.componentDidMount();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    subscribeOnGalleryChange () {\r\n        this.subscription = adService.subscribeOnNewsPostAdUpdate(\r\n            (advertisement: Advertisement) => this.setState({ advertisement })\r\n        );\r\n    }\r\n\r\n    changeLocale (currentLocale: Locale) {\r\n        this.setState({ currentLocale });\r\n        this.fetchCurrentArticle(currentLocale)\r\n    }\r\n\r\n    render () {\r\n        const { news, advertisement, locales, currentLocale } = this.state;\r\n        const imageSrc = news ? news.newsCover.url : '';\r\n        const imageStyle = {\r\n            backgroundPosition: 'center',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${ imageSrc })`\r\n        }\r\n        const date = moment(news?.publishDate).format(DATE_FORMAT);\r\n        const wordsBy = news?.wordsBy ? `| Author: ${ news.wordsBy }` : '';\r\n        const photosBy = news?.photosBy ? `| Photo by: ${ news.photosBy }` : '';\r\n\r\n        return news ? (\r\n            <article className={ `news ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                <Seo meta={{\r\n                        title: news.title,\r\n                        description: news.excerpt,\r\n                        thumbnail: imageSrc,\r\n                        type: 'article',\r\n                    }}\r\n                />\r\n                <div className='news-description' style={ imageStyle }>\r\n                    <div className='news-information'>\r\n                        <h1 className='news-title'>{ news.title }</h1>\r\n                        <p className='news-excerpt'>{ news.excerpt }</p>\r\n                        <p className='news-meta'>\r\n                            { `${ date } ${ wordsBy } ${ photosBy }` }\r\n                        </p>\r\n                        { locales.length > 1 && (\r\n                            <div className='language-toggle-container'>\r\n                                { locales.map(locale => (\r\n                                    <div className={ `language-toggle-button ${ locale === currentLocale && 'active' }` } key={ locale } onClick={ () => this.changeLocale(locale) }>\r\n                                        { localeStringByLocale.get(locale) }\r\n                                    </div>  \r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className='news-content-container'>\r\n                    <div className='news-content'>\r\n                        <ReactMarkdown\r\n                            source={ news.content }\r\n                            escapeHtml={ false }\r\n                            renderers={{ link: props => <a href={ props.href } target=\"_blank\" rel=\"noopener noreferrer\">{ props.children }</a> }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                { advertisement ? (<AdComponent advertisement={ advertisement } />) : null }\r\n                <h2 className=\"more-news-title\">MORE NEWS</h2>\r\n                <div className=\"more-news\">\r\n                    {\r\n                        this.state.articles.filter(article => article.slug !== this.state.news?.slug)\r\n                            .sort(() => 0.5 - Math.random())\r\n                            .slice(0, 3)\r\n                            .map(article => (\r\n                                <Link to={ `../../../news/${ article.category.toLowerCase() }/${ article.slug }` } title={ article.title } key={ article.slug }>\r\n                                    <div className={ `card ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                                        <img src={ article.newsCover.url } loading='lazy' alt={ article.newsCover.alternativeText }/>\r\n                                        <h2>{ article.title }</h2>\r\n                                        <p>{ article.excerpt }</p>\r\n                                    </div>    \r\n                                </Link>\r\n                            ))\r\n                    }\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default NewsComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\nimport googlePlay from '@iconify/icons-cib/google-play';\r\nimport Icon from '@iconify/react';\r\n\r\nimport SocialLinksComponent from '../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport { AboutDto, About } from '../about/interfaces';\r\nimport { ANDROID_APP, HEADER_SOCIAL_LINKS } from '../shared/constants';\r\n\r\nimport './About.css';\r\n\r\ninterface AboutComponentState {\r\n    about: About | null\r\n}\r\n\r\nexport class AboutComponent extends Component {\r\n    state: AboutComponentState = {\r\n        about: null\r\n    }\r\n\r\n    parseAbout(aboutDto: AboutDto): About | null {\r\n        return aboutDto ? {\r\n            title: aboutDto.Title,\r\n            description: aboutDto.Content,\r\n            aboutCover: {\r\n                alternativeText: aboutDto.Image.alternativeText,\r\n                caption: aboutDto.Image.caption,\r\n                url: aboutDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchAbout () {\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/about`)\r\n            .then(response => response.json())\r\n            .then((data: AboutDto) => this.parseAbout(data))\r\n            .then(about => this.setState({ about }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchAbout();\r\n    }\r\n\r\n    render () {\r\n        const { about } = this.state;\r\n        const imageSrc = about ? about.aboutCover.url : '';\r\n\r\n        return about ? (\r\n            <article className={ `about ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                <Seo meta={{\r\n                        title: about.title,\r\n                        description: about.description,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='information'>\r\n                    <h1>{ about.title }</h1>\r\n                    <p>{ about.description }</p>\r\n                    <div className=\"social-links\">\r\n                        <SocialLinksComponent socialLinks={ HEADER_SOCIAL_LINKS }></SocialLinksComponent>\r\n                    </div>\r\n                    {\r\n                        isMobileOnly && (\r\n                            <div className=\"about-android-link-wrapper\">\r\n                                <a className='android-link'\r\n                                    target='_blank'\r\n                                    href={ HEADER_SOCIAL_LINKS.googlePlay }\r\n                                    title={ `A link to Android App` }\r\n                                    aria-label={ `A link to Android App` }\r\n                                    rel='noopener noreferrer'\r\n                                >\r\n                                    <Icon className='google-play-icon' icon={ googlePlay }/>\r\n                                    { ANDROID_APP }\r\n                                </a>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className='image'>\r\n                    <img src={ imageSrc } loading='lazy' alt={ about.aboutCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default AboutComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport { DonateDto, Donate } from '../donate/interfaces';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './Donate.css';\r\n\r\n\r\nconst DONATE_SEO_DESCRIPTION = 'Support us!'\r\n\r\ninterface DonateComponentState {\r\n    donate: Donate | null\r\n}\r\n\r\nexport class DonateComponent extends Component {\r\n    state: DonateComponentState = {\r\n        donate: null\r\n    }\r\n\r\n    parseDonate(donateDto: DonateDto): Donate | null {\r\n        return donateDto ? {\r\n            title: donateDto.Title,\r\n            description: donateDto.Content,\r\n            donateCover: {\r\n                alternativeText: donateDto.Image.alternativeText,\r\n                caption: donateDto.Image.caption,\r\n                url: donateDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchDonate () {\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/donate`)\r\n            .then(response => response.json())\r\n            .then((data: DonateDto) => this.parseDonate(data))\r\n            .then(donate => this.setState({ donate }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchDonate();\r\n    }\r\n\r\n    render () {\r\n        const { donate } = this.state;\r\n        const imageSrc = donate ? donate.donateCover.url : '';\r\n\r\n        return donate ? (\r\n            <article className={ `donate ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                 <Seo meta={{\r\n                        title: donate.title,\r\n                        description: DONATE_SEO_DESCRIPTION,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='information'>\r\n                    <h1>{ donate.title }</h1>\r\n                    <div className='text-content'>\r\n                        <ReactMarkdown\r\n                            source={ donate.description }\r\n                            escapeHtml={ false }\r\n                            renderers={{ link: props => <a href={ props.href } target=\"_blank\" rel=\"noopener noreferrer\">{ props.children }</a> }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='image'>\r\n                    <img src={ imageSrc } loading='lazy' alt={ donate.donateCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default DonateComponent;","import { FilterItem, ProjectTag } from \"./enums\";\r\n\r\nexport const projectTagToFilterItem = new Map<ProjectTag, FilterItem>([\r\n    [ProjectTag.Animation, FilterItem.Animation],\r\n    [ProjectTag.Commercials, FilterItem.Commercials],\r\n    [ProjectTag.Foley, FilterItem.Foley],\r\n    [ProjectTag.Jingles, FilterItem.Jingles],\r\n    [ProjectTag.Mobile, FilterItem.Mobile],\r\n    [ProjectTag.PodcastsVoice, FilterItem.PodcastsVoice],\r\n]);\r\n\r\nexport const filterItemToProjectTag = new Map<FilterItem, ProjectTag | null>([\r\n    [FilterItem.Animation, ProjectTag.Animation],\r\n    [FilterItem.Commercials, ProjectTag.Commercials],\r\n    [FilterItem.Foley, ProjectTag.Foley],\r\n    [FilterItem.Jingles, ProjectTag.Jingles],\r\n    [FilterItem.Mobile, ProjectTag.Mobile],\r\n    [FilterItem.PodcastsVoice, ProjectTag.PodcastsVoice],\r\n    [FilterItem.All, null],\r\n]);\r\n","import React, { RefObject } from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport Icon from '@iconify/react';\r\nimport playIcon from '@iconify/icons-el/play';\r\n\r\nimport { playerService } from '../../shared/Player/PlayerService';\r\nimport { projectTagToFilterItem } from '../constants';\r\nimport { ProjectTag } from '../enums';\r\n\r\nimport { Project } from '../interfaces';\r\n\r\nimport './ProjectCardComponent.css';\r\n\r\nconst PLAYER_CONFIG = {\r\n    file: {\r\n        attributes: {\r\n            disablePictureInPicture: true,\r\n            controlsList: 'nodownload noplaybackrate'\r\n        }\r\n    }\r\n};\r\n\r\ninterface ProjectCardParameters {\r\n    project: Project;\r\n    shouldPlay: boolean;\r\n    onTagClick: (tag: ProjectTag) => void;\r\n    onCardClick: (id: string) => void;\r\n}\r\n\r\nfunction ProjectCardComponent ({ project, shouldPlay, onTagClick, onCardClick }: ProjectCardParameters) {   \r\n    const playerRef: RefObject<ReactPlayer> = React.createRef();\r\n\r\n    const handleTagClick = (tag: ProjectTag) => {\r\n        onTagClick(tag);\r\n    }\r\n\r\n    const handleCardClick = () => { \r\n        onCardClick(project.id);\r\n        playerRef.current?.seekTo(0);\r\n        if (playerService.playing) {\r\n            playerService.muted = true;\r\n        }\r\n    }\r\n\r\n    const renderMedia = () => {\r\n        return (\r\n            <ReactPlayer\r\n                config={ PLAYER_CONFIG }\r\n                ref={ playerRef }\r\n                url={ project.video?.url }\r\n                controls={ true }\r\n                playing={ shouldPlay }\r\n                muted={ !shouldPlay }\r\n                loop={ true }\r\n                volume={ 1 }\r\n                width={ '100%' }\r\n                height={ '100%' }\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='project-card-container'>\r\n            <div className='media-container'>\r\n                <div\r\n                    className={ `media-image ${ shouldPlay ? 'hidden' : 'visible' }` }\r\n                    title={ project.title }\r\n                    style={{\r\n                        backgroundImage: `url(${ project.image.url })`,\r\n                    }}\r\n                    onClick={ () => handleCardClick() }\r\n                >\r\n                    <div className='mask'>\r\n                        { !shouldPlay && <Icon icon={ playIcon } width={ 64 } height={ 64 }/> }\r\n                    </div>\r\n                </div>\r\n                <div className='media-video'>{ renderMedia() }</div>\r\n            </div>\r\n            <div className='information-container'>\r\n                <h2 className='project-title'>{ project.title }</h2>\r\n                <div className='project-tags'>{\r\n                    project.tags.length && project.tags.map((tag, index) => (\r\n                        <div className=\"tag\" key={ `${project.id}-${tag.toLowerCase()}` }>\r\n                            <div className='tag-name' onClick={ () => handleTagClick(tag) }>{ projectTagToFilterItem.get(tag) }</div>\r\n                            <div className={`tag-separator ${ index === project.tags.length - 1 ? 'hidden' : 'visible' }`}>/</div>\r\n                        </div>\r\n                    ))\r\n                }</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectCardComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport { StudioHeaderDto, StudioHeader, PortfolioDto, Project, PortfolioTagDto } from './interfaces';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './Studio.css';\r\nimport { FilterItem, ProjectTag } from './enums';\r\nimport { projectTagToFilterItem, filterItemToProjectTag } from './constants';\r\nimport ProjectCardComponent from './project-card/ProjectCardComponent';\r\n\r\nconst STUDIO_SEO_TITLE = 'Studio';\r\nconst STUDIO_SEO_DESCRIPTION = 'Plato Sound'\r\n\r\ninterface StudioComponentState {\r\n    studio: StudioHeader | null;\r\n    projects: Project[] | null;\r\n    displayedProjects: Project[] | null;\r\n    activeProject: Project | null;\r\n    filterItems: FilterItem[] | null;\r\n    currentFilter: FilterItem | null;\r\n}\r\n\r\nexport class StudioComponent extends Component {\r\n    state: StudioComponentState = {\r\n        studio: null,\r\n        projects: [],\r\n        displayedProjects: [],\r\n        activeProject: null,\r\n        filterItems: [],\r\n        currentFilter: FilterItem.All,\r\n    }\r\n\r\n    parseStudio(studioDto: StudioHeaderDto): StudioHeader | null {\r\n        return studioDto ? {\r\n            title: studioDto.Title,\r\n            description: studioDto.Decription,\r\n            studioImage: {\r\n                alternativeText: studioDto.Image.alternativeText,\r\n                caption: studioDto.Image.caption,\r\n                url: studioDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    parseTags(tag: PortfolioTagDto): ProjectTag[] {\r\n        return Object.entries(tag).filter(entry => entry[1] === true).map(entry => entry[0]) as ProjectTag[];\r\n    }\r\n\r\n    parseProjects(portfolioDto: PortfolioDto[]): Project[] | null {\r\n        return portfolioDto ? portfolioDto.map(project => {\r\n            return {\r\n                title: project.Title,\r\n                description: project.Description,\r\n                image: project.Image,\r\n                tags: this.parseTags(project.Tag),\r\n                video: project.Video,\r\n                id: project.id\r\n            }\r\n        }) : null;\r\n    }\r\n\r\n    fetchStudio () {\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/portfolio-header`)\r\n            .then(response => response.json())\r\n            .then((data: StudioHeaderDto) => this.parseStudio(data))\r\n            .then(studio => this.setState({ studio }));\r\n    }\r\n\r\n    fetchPortfolio () {\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/portfolios`)\r\n            .then(response => response.json())\r\n            .then((data: PortfolioDto[]) => this.parseProjects(data))\r\n            .then(projects => {\r\n                const filterItems = Array\r\n                    .from(new Set(projects?.map(project => project.tags).flat().map(tag => projectTagToFilterItem.get(tag!))))\r\n                    .concat([ FilterItem.All ])\r\n                    .sort((a: FilterItem | undefined, b: FilterItem | undefined) => a!.localeCompare(b!));\r\n\r\n                this.setState({\r\n                    filterItems,\r\n                    projects,\r\n                    displayedProjects: projects,\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchStudio();\r\n        this.fetchPortfolio();\r\n    }\r\n\r\n    setFilter (filter: FilterItem): void {\r\n        const tag = filterItemToProjectTag.get(filter);\r\n\r\n        this.setState({\r\n            currentFilter: filter,\r\n            displayedProjects: tag ? this.state.projects?.filter(project => project.tags.includes(tag)) : this.state.projects,\r\n            activeProject: null,\r\n        });\r\n    }\r\n\r\n    handleTagClick (tag: ProjectTag): void {\r\n        const filter = projectTagToFilterItem.get(tag);\r\n\r\n        filter && this.setFilter(filter);\r\n    }\r\n\r\n    handleCardClick (id: string): void {\r\n        this.setState({\r\n            activeProject: this.state.activeProject?.id === id ? null : this.state.projects?.find(project => project.id === id)\r\n        });\r\n    }\r\n\r\n\r\n    renderFilterButtons (filterItems: FilterItem[] | null): JSX.Element[] | null {\r\n        return filterItems && filterItems.map((item, index) => (\r\n            <div className='filter' key={ `filter-${item.toLowerCase()}` }>\r\n                <div className={`filter-button ${ this.state.currentFilter === item && 'active' }`} onClick={ () => this.setFilter(item) }>{ item }</div>\r\n                <div className={`filter-separator ${ index === filterItems.length - 1 ? 'hidden' : 'visible' }`}>/</div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    renderProjectCards (projects: Project[] | null): JSX.Element[] | null {\r\n        return projects && projects.map((project, index) => (\r\n            <div className={ index % 2 === 0 ? 'left' : 'right' } key={ project.id }>\r\n                <ProjectCardComponent\r\n                    project={ project }\r\n                    shouldPlay={ project.id === this.state.activeProject?.id }\r\n                    onTagClick={ (tag) => this.handleTagClick(tag) }\r\n                    onCardClick={ (id) => this.handleCardClick(id) }\r\n                ></ProjectCardComponent>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            studio,\r\n            displayedProjects,\r\n            filterItems,\r\n        } = this.state;\r\n        const imageSrc = studio ? studio.studioImage.url : '';\r\n        const imageStyle = {\r\n            backgroundPosition: 'center',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${ imageSrc })`\r\n        };\r\n\r\n        return studio ? (\r\n            <article className={ `studio ${ isMobileOnly ? 'mobile' : 'desktop' }` }>\r\n                 <Seo meta={{\r\n                        title: STUDIO_SEO_TITLE,\r\n                        description: STUDIO_SEO_DESCRIPTION,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='image' style={ imageStyle }>\r\n                    <div className='left'>\r\n                        <h1>{ studio.title }</h1>\r\n                    </div>\r\n                    <div className='right'>\r\n                        <div className='description'>\r\n                            <ReactMarkdown\r\n                                source={ studio.description }\r\n                                escapeHtml={ false }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='portfolio-container'>\r\n                    <div className='filter-container'>\r\n                        { this.renderFilterButtons(filterItems) }\r\n                    </div>\r\n                    <div className='portfolio-list'>\r\n                        { this.renderProjectCards(displayedProjects) }\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default StudioComponent;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './NotFoundComponent.css';\r\n\r\n\r\nconst QUESTIONS = [ 'What to listen to now?', 'Who let the dogs out?', 'Who’s your daddy?', 'Damn son where’d ya find this?', 'Where is my mind?', 'Where is my money?', 'Should I stay or should I go?', 'Do I?', 'What is the way to Kaunas?', 'What\\'s going on?', 'Could you be loved?', 'What is love?', 'Who is Finds and what does he find?', 'W̷̨̯̭͇̣̭͔̳͖͕̩̥̯̰͔̣̿̆͌͑ͅḣ̵̡̡̛̛̭̖͕̫̩͚͚̘̹̣̝̮̞̥͖̝͈́̈̃̍̆̈́̔̓̈́͋̀͌̾̏̓̏̇̈́̕̕͘͜͜͝͝͝ͅa̷̲͐͊̒̔́̿͊̏̈́̿͐́̂̍͆̃̌͊̈́̕̕̕͠t̵̡̨̡̠̻͍̰̗̣͔̖͍̭̣̘̼̩̗͚̞̬͊̉̅͌̎̄̔͗̑͛̓̇̆̃̿̕̚͝͠ ̴͇̞͈̜̞͍̺̳̈́̅̾͌̓̇̀̍̅͒͋͆̀̅̿̌̉̒̃̓̕͜͝͝͝͝ị̵̤̻̥̥̗̰̮͙̗̺̺̬̻̰́͂̎̂͆̈̍̀͑͐̾̈́͘͜ͅs̵͖͉̎̂͆̀̽̀̂͛̾̓̊̏̽̂̇̊̓̔̎̈̏̎̈́̒͘̚̕͝ ̵̢̡̛̻̜͈̺̳͕̝̥̫̗̱̰͔̘̹͕̦͎͉͓̭̘̙̈́́̈́́̒̅̓͂̓̈́͑̄̽̓́̀̓̑́̓̚͝g̸̛͈̟̭̀̉̊̋̏̂ơ̷̧̢̢̡̲̹̭̥̺̩͙̯̩̯̦̩̙̗͇̤̜̳̹̖͈̜̹͋̏̀̉̓̋̈́̄͆͑̇̅̕͘ḯ̵̛̩͖̮̥̲̮̗͍͓͋̈́́͆͆͆͂͑̒͒̈͗̀͊͝ͅn̴̛̛̖͒̎̐̌͑͐̾́̏̾̐̒͆̍̂̀̔͂̆̚͝g̸̥̲̳͍̥̾̊́̇ ̵̱̜̜̪̤͚̩̳̺̗̽͜ȏ̸͖͇̇́͛̒̆̓̀̿̈́̾͊̉͑̆̽̊̒̎̒̋̕̚̕͠n̶̺̼̭̘̜͙̹͖̫̼̝͇̫͌̓̿͌͋̂̀͒̆̇͠?̷̨̢͇̜͔̙̻̦̭̻̰̪̼̣̪͙̳̥̗̦̭͍̀̀̀̀͒͆͜͠', 'Why?', 'Why does it always rain on me?', 'Why does my heart feels so bad?', '00110010 00110000 00110010 00110000?', 'Why don\\'t we always get what we want?', 'Is there life on Mars?', 'Anybody seen my baby?', 'Where have all the cowboys gone?', 'What are numbers?', 'Who rather to be - an unhappy human being or a happy dog?', 'Can food be art?', 'What about fish, oysters and tomatoes?', 'How much is the fish?', 'Is it true or false?', 'What makes you, you?', 'How to keep your cat happy indoors?' ]\r\n\r\nexport function NotFoundComponent() {\r\n    const question = QUESTIONS[Math.floor(Math.random() * QUESTIONS.length)];\r\n\r\n    return (\r\n        <div className='not-found-container'>\r\n            <h1>404</h1>\r\n            <Link to='/' className='question-link'><h3>However, Radio Plato still solves an eternal question: '{ question }'</h3></Link>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from 'react-router-dom';\r\n\r\nimport StartPageComponent from '../start-page/StartPageComponent';\r\nimport ShowListComponent from '../shows/ShowListComponent';\r\nimport NewsListComponent from '../news/NewsListComponent';\r\nimport ShowComponent from '../shows/ShowComponent/ShowComponent';\r\nimport NewsComponent from '../news/News/NewsComponent';\r\nimport AboutComponent from '../about/About';\r\nimport { SchedulePageComponent } from '../shared/schedule/ScheduleComponent';\r\nimport DonateComponent from '../donate/Donate'\r\nimport StudioComponent from '../studio/Studio';\r\nimport { NotFoundComponent } from '../not-found/NotFoundComponent';\r\n\r\nimport { NewsListTypes } from '../shared/enums';\r\n\r\nimport './Content.css';\r\n\r\n\r\nenum ROUTES {\r\n    SCHEDULE = '/schedule',\r\n    SHOWS = '/shows',\r\n    NEWS = '/news',\r\n    ABOUT = '/about',\r\n    DONATE = '/donate',\r\n    STUDIO = '/studio',\r\n}\r\n\r\nfunction Content() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={ StartPageComponent } />\r\n            <Route exact path={ ROUTES.SCHEDULE } component={ SchedulePageComponent } />\r\n            <Route exact path={ ROUTES.SHOWS } component={ ShowListComponent } />\r\n            <Route exact path={ `${ ROUTES.SHOWS }/:slug` } component={(routerProps: any) => <ShowComponent slug={ routerProps.match.params.slug } />} />\r\n            <Route exact path={ ROUTES.NEWS } component={ () => <NewsListComponent type={ NewsListTypes.Full } /> } />\r\n            <Route exact path={ `${ ROUTES.NEWS }/:category` } component={ (routerProps: any) => <NewsListComponent type={ NewsListTypes.Full } category={ routerProps.match.params.category } /> } />\r\n            <Route exact path={ `${ ROUTES.NEWS }/:category/:slug` } component={(routerProps: any) => <NewsComponent slug={routerProps.match.params.slug} />} />\r\n            <Route exact path={ ROUTES.ABOUT } component={ AboutComponent } />\r\n            <Route exact path={ ROUTES.DONATE } component={ DonateComponent } />\r\n            <Route exact path={ ROUTES.STUDIO } component={ StudioComponent } />\r\n            <Route component={ NotFoundComponent } />\r\n        </Switch>\r\n    );\r\n}\r\n  \r\nexport default Content;","import React, { Component } from 'react'\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from 'react-router-dom';\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton'\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent'\r\nimport Content from '../content/Content'\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Main.css'\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <main className={ isMobileOnly ? 'mobile' : 'desktop' }>\r\n                <BrowserView>\r\n                    <MenuButton />\r\n                </BrowserView>\r\n                <Switch>\r\n                    <Route exact path='/' render={\r\n                        props => <PlayerComponent { ...props } playerType={ PlayerTypes.Main }/>\r\n                    }/>\r\n                </Switch>\r\n                <Content />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default Main;","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { playerService } from './PlayerService';\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE } from './constants';\r\n\r\nimport './Player.css';\r\n\r\nexport class Player extends Component {\r\n    state = DEFAULT_PLAYER_STATE;\r\n    subscription: Subscription | null = null;\r\n    \r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n        this.setState({ playing: false });\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnPlayerStateChanges((data: PlayerState) => {\r\n            if (data.playing !== this.state.playing) {\r\n                const audio = document.querySelector('audio') as HTMLAudioElement;\r\n\r\n                audio.src = data.playing ? process.env.REACT_APP_STREAM_URL as string : '';\r\n            }\r\n            this.setState(data);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            playing,\r\n            muted,\r\n            volume\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='audio'>\r\n                <ReactPlayer\r\n                    url={ \"https://upload.wikimedia.org/wikipedia/commons/2/2e/LatinTriangle.ogg\" }\r\n                    playing={ playing }\r\n                    muted={ muted }\r\n                    volume={ volume }\r\n                    config={{\r\n                        file: {\r\n                            forceAudio: true\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    BrowserRouter, HashRouter\r\n} from 'react-router-dom';\r\nimport Analytics from 'react-router-ga';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\n\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Player from './components/shared/Player/Player';\r\n\r\nimport './App.css';\r\n\r\n\r\nconst Components = (\r\n    <>\r\n        <Header />\r\n        <Main />\r\n        <Player />\r\n    </>\r\n);\r\n\r\nfunction withAnalytics (children: JSX.Element) {\r\n    return navigator.userAgent !== \"ReactSnap\" ?\r\n    (\r\n        <Analytics id={ process.env.REACT_APP_GA }>\r\n            { children }\r\n        </Analytics>\r\n    ) : children;\r\n}\r\n\r\nfunction withEnvironmentalRouter (children: JSX.Element) {\r\n    return process.env.REACT_APP_ENV === 'production' ?\r\n    (\r\n        <BrowserRouter>\r\n            { withAnalytics(children) }\r\n        </BrowserRouter>\r\n    ) :\r\n    (\r\n        <HashRouter basename='/'>\r\n            { children }\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <HelmetProvider>\r\n                { withEnvironmentalRouter(Components) }\r\n            </HelmetProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<React.StrictMode>\r\n  <App />\r\n</React.StrictMode>,\r\nrootElement);\r\n"],"sourceRoot":""}